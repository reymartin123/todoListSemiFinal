{"version":3,"sources":["services/SPRoleDefinitionPickerService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8CAAkD;AAOlD;;GAEG;AACH;IAIE;;OAEG;IACH,uCAAY,MAAmD,EAAE,WAA4B;QAC3F,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC;IAC7B,CAAC;IAED;;OAEG;IACU,0DAAkB,GAA/B;;;;;;wBAEQ,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC;wBAGpH,QAAQ,GAAc,cAAc,8BAA2B,CAAC;wBAErD,qBAAM,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,sBAAY,CAAC,cAAc,CAAC,EAAE,EAAE;gCAC3F,OAAO,EAAE;oCACP,CAAC,QAAQ,EAAE,mCAAmC,CAAC;oCAC/C,CAAC,eAAe,EAAE,EAAE,CAAC;iCACtB;6BACF,CAAC,EAAA;;wBALE,QAAQ,GAAG,SAKb;wBAEqB,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;wBAAxC,eAAe,GAAG,CAAC,SAAqB,CAAyC;6BAGjF,IAAI,CAAC,KAAK,CAAC,0BAA0B,EAArC,wBAAqC;wBAEnC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,0BAA0B,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;wBAClE,MAAM,SAA8B,CAAC;6BAGrC,CAAA,EAAE,YAAY,KAAK,CAAA,EAAnB,wBAAmB;wBACrB,MAAM,GAAG,EAAE,CAAC;;4BAEH,qBAAM,EAAE,EAAA;;wBAAjB,MAAM,GAAG,SAAQ,CAAC;;;wBAGpB,eAAe,CAAC,KAAK,GAAG,MAAM,CAAC;;4BAGjC,sBAAO,eAAe,EAAC;;;;KACxB;IAED;;OAEG;IACK,qDAAa,GAArB;QACE,MAAM,CAAC,IAAI,OAAO,CAAuC,UAAC,OAAO;YAC/D,IAAM,kBAAkB,GAAyC;gBAC/D,KAAK,EAAE,EAAE;aACV,CAAC;YAEF,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IACH,oCAAC;AAAD,CA9DA,AA8DC,IAAA;AA9DY,sEAA6B","file":"services/SPRoleDefinitionPickerService.js","sourcesContent":["import { SPHttpClient } from '@microsoft/sp-http';\nimport { Environment, EnvironmentType } from '@microsoft/sp-core-library';\nimport { IWebPartContext } from '@microsoft/sp-webpart-base';\nimport { IRoleDefinitionInformation, IPropertyFieldRoleDefinitionPickerHostProps } from '../propertyFields/roleDefinitionPicker';\nimport { ISPRoleDefinitionPickerService } from './ISPRoleDefinitionPickerService';\nimport { IRoleDefinitionInformationCollection } from '../propertyFields/roleDefinitionPicker';\n\n/**\n * Service implementation to get list & list items from current SharePoint site\n */\nexport class SPRoleDefinitionPickerService implements ISPRoleDefinitionPickerService {\n  private context: IWebPartContext;\n  private props: IPropertyFieldRoleDefinitionPickerHostProps;\n\n  /**\n   * Service constructor\n   */\n  constructor(_props: IPropertyFieldRoleDefinitionPickerHostProps, pageContext: IWebPartContext) {\n    this.props = _props;\n    this.context = pageContext;\n  }\n\n  /**\n   * Gets the collection of view for a selected list\n   */\n  public async getRoleDefinitions(): Promise<IRoleDefinitionInformationCollection> {\n\n    const webAbsoluteUrl = this.props.webAbsoluteUrl ? this.props.webAbsoluteUrl : this.context.pageContext.web.absoluteUrl;\n\n    // If the running environment is SharePoint, request the lists REST service\n    let queryUrl: string = `${webAbsoluteUrl}/_api/web/RoleDefinitions`;\n\n    let response = await this.context.spHttpClient.get(queryUrl, SPHttpClient.configurations.v1, {\n      headers: [\n        ['accept', 'application/json;odata=nometadata'],\n        ['odata-version', '']\n      ]\n    });\n\n    let roleDefinitions = (await response.json()) as IRoleDefinitionInformationCollection;\n\n    // Check if onViewsRetrieved callback is defined\n    if (this.props.onRoleDefinitionsRetrieved) {\n      //Call onViewsRetrieved\n      let lr = this.props.onRoleDefinitionsRetrieved(roleDefinitions.value);\n      let output: IRoleDefinitionInformation[];\n\n      //Conditional checking to see of PromiseLike object or array\n      if (lr instanceof Array) {\n        output = lr;\n      } else {\n        output = await lr;\n      }\n\n      roleDefinitions.value = output;\n    }\n\n    return roleDefinitions;\n  }\n\n  /**\n   * Returns an empty view for when a list isn't selected\n   */\n  private getEmptyViews(): Promise<IRoleDefinitionInformationCollection> {\n    return new Promise<IRoleDefinitionInformationCollection>((resolve) => {\n      const roleDefinitionData: IRoleDefinitionInformationCollection = {\n        value: []\n      };\n\n      resolve(roleDefinitionData);\n    });\n  }\n}\n"],"sourceRoot":"../../src"}