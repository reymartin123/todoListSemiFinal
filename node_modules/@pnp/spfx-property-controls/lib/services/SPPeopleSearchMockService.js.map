{"version":3,"sources":["services/SPPeopleSearchMockService.ts"],"names":[],"mappings":";;AAEA;;GAEG;AACH;IAAA;IAeA,CAAC;IARC;;OAEG;IACW,yCAAY,GAA1B,UAA2B,OAAe,EAAE,OAAa;QACvD,MAAM,CAAC,IAAI,OAAO,CAAgC,UAAC,OAAO;YACxD,OAAO,CAAC,4BAA4B,CAAC,QAAQ,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAZD;;OAEG;IACY,qCAAQ,GAAkC,EAAE,CAAC;IAU9D,mCAAC;CAfD,AAeC,IAAA;kBAfoB,4BAA4B","file":"services/SPPeopleSearchMockService.js","sourcesContent":["import { IPropertyFieldGroupOrPerson } from '../PropertyFieldPeoplePicker';\n\n/**\n * Defines a http client to request mock data to use the web part with the local workbench\n */\nexport default class SPPeoplePickerMockHttpClient {\n\n  /**\n   * Mock SharePoint result sample\n   */\n  private static _results: IPropertyFieldGroupOrPerson[] = [];\n\n  /**\n   * Mock search People method\n   */\n  public static searchPeople(restUrl: string, options?: any): Promise<IPropertyFieldGroupOrPerson[]> {\n    return new Promise<IPropertyFieldGroupOrPerson[]>((resolve) => {\n      resolve(SPPeoplePickerMockHttpClient._results);\n    });\n  }\n}\n"],"sourceRoot":"../../src"}