{"version":3,"sources":["propertyFields/viewPicker/PropertyFieldViewPickerHost.tsx"],"names":[],"mappings":"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","file":"propertyFields/viewPicker/PropertyFieldViewPickerHost.js","sourcesContent":["import * as React from 'react';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { IPropertyFieldViewPickerHostProps, IPropertyFieldViewPickerHostState } from './IPropertyFieldViewPickerHost';\nimport { SPViewPickerService } from '../../services/SPViewPickerService';\nimport FieldErrorMessage from '../errorMessage/FieldErrorMessage';\nimport { ISPView } from '.';\nimport { ISPViews } from './ISPViews';\n\n// Empty view value\nconst EMPTY_VIEW_KEY = 'NO_VIEW_SELECTED';\n\n/**\n * Renders the controls for PropertyFieldViewPicker component\n */\nexport default class PropertyFieldViewPickerHost extends React.Component<IPropertyFieldViewPickerHostProps, IPropertyFieldViewPickerHostState> {\n  private options: IDropdownOption[] = [];\n  private selectedKey: string;\n  private latestValidateValue: string;\n  private async: Async;\n  private delayedValidate: (value: string) => void;\n\n  /**\n   * Constructor method\n   */\n  constructor(props: IPropertyFieldViewPickerHostProps) {\n    super(props);\n\n    this.state = {\n      results: this.options,\n      errorMessage: ''\n    };\n\n    this.async = new Async(this);\n    this.validate = this.validate.bind(this);\n    this.onChanged = this.onChanged.bind(this);\n    this.notifyAfterValidate = this.notifyAfterValidate.bind(this);\n    this.delayedValidate = this.async.debounce(this.validate, this.props.deferredValidationTime);\n  }\n\n  public componentDidMount(): void {\n    // Start retrieving the list views\n    this.loadViews();\n  }\n\n  public componentDidUpdate(prevProps: IPropertyFieldViewPickerHostProps, _prevState: IPropertyFieldViewPickerHostState): void {\n    if (this.props.listId !== prevProps.listId || this.props.webAbsoluteUrl !== prevProps.webAbsoluteUrl) {\n      this.loadViews();\n    }\n  }\n\n  /**\n   * Loads the views from a SharePoint list\n   */\n  private loadViews(): void {\n    const viewService: SPViewPickerService = new SPViewPickerService(this.props, this.props.context);\n    const viewsToExclude: string[] = this.props.viewsToExclude || [];\n    this.options = [];\n    viewService.getViews().then((response: ISPViews) => {\n      // Start mapping the views that are selected\n      response.value.forEach((view: ISPView) => {\n        if (this.props.selectedView === view.Id) {\n          this.selectedKey = view.Id;\n        }\n\n         // Make sure that the current view is NOT in the 'viewsToExclude' array\n         if (viewsToExclude.indexOf(view.Title) === -1 && viewsToExclude.indexOf(view.Id) === -1) {\n          this.options.push({\n            key: view.Id,\n            text: view.Title\n          });\n        }\n      });\n\n      // Option to unselect the view\n      this.options.unshift({\n        key: EMPTY_VIEW_KEY,\n        text: ''\n      });\n\n      // Update the current component state\n      this.setState({\n        results: this.options,\n        selectedKey: this.selectedKey\n      });\n    });\n  }\n\n  /**\n   * Raises when a view has been selected\n   */\n  private onChanged(option: IDropdownOption, _index?: number): void {\n    const newValue: string = option.key as string;\n    this.delayedValidate(newValue);\n  }\n\n  /**\n   * Validates the new custom field value\n   */\n  private validate(value: string): void {\n    if (this.props.onGetErrorMessage === null || this.props.onGetErrorMessage === undefined) {\n      this.notifyAfterValidate(this.props.selectedView, value);\n      return;\n    }\n\n    if (this.latestValidateValue === value) {\n      return;\n    }\n\n    this.latestValidateValue = value;\n\n    const errResult: string | PromiseLike<string> = this.props.onGetErrorMessage(value || '');\n    if (typeof errResult !== 'undefined') {\n      if (typeof errResult === 'string') {\n        if (errResult === '') {\n          this.notifyAfterValidate(this.props.selectedView, value);\n        }\n        this.setState({\n          errorMessage: errResult\n        });\n      } else {\n        errResult.then((errorMessage: string) => {\n          if (!errorMessage) {\n            this.notifyAfterValidate(this.props.selectedView, value);\n          }\n          this.setState({\n            errorMessage: errorMessage\n          });\n        });\n      }\n    } else {\n      this.notifyAfterValidate(this.props.selectedView, value);\n    }\n  }\n\n  /**\n   * Notifies the parent Web Part of a property value change\n   */\n  private notifyAfterValidate(oldValue: string, newValue: string) {\n    // Check if the user wanted to unselect the view\n    const propValue = newValue === EMPTY_VIEW_KEY ? '' : newValue;\n\n    // Deselect all options\n    this.options = this.state.results.map(option => {\n      if (option.selected) {\n        option.selected = false;\n      }\n      return option;\n    });\n    // Set the current selected key\n    this.selectedKey = newValue;\n    // Update the state\n    this.setState({\n      selectedKey: this.selectedKey,\n      results: this.options\n    });\n\n    if (this.props.onPropertyChange && propValue !== null) {\n      // Store the new property value\n      this.props.properties[this.props.targetProperty] = propValue;\n\n      // Trigger the default onPropertyChange event\n      this.props.onPropertyChange(this.props.targetProperty, oldValue, propValue);\n\n      // Trigger the apply button\n      if (typeof this.props.onChange !== 'undefined' && this.props.onChange !== null) {\n        this.props.onChange(this.props.targetProperty, propValue);\n      }\n    }\n  }\n\n  /**\n   * Called when the component will unmount\n   */\n  public componentWillUnmount() {\n    if (typeof this.async !== 'undefined') {\n      this.async.dispose();\n    }\n  }\n\n  /**\n   * Renders the SPViewPicker controls with Office UI Fabric\n   */\n  public render(): JSX.Element {\n    // Renders content\n    return (\n      <div>\n        {this.props.label && <Label>{this.props.label}</Label>}\n        <Dropdown\n          disabled={this.props.disabled}\n          label=''\n          onChanged={this.onChanged}\n          options={this.state.results}\n          selectedKey={this.state.selectedKey}\n        />\n\n        <FieldErrorMessage errorMessage={this.state.errorMessage} />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../src"}