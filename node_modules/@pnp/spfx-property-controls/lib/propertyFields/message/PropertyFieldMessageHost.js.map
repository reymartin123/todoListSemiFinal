{"version":3,"sources":["propertyFields/message/PropertyFieldMessageHost.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,iEAA+E;AAS/E;IAAuD,6CAGtD;IACC,mCAAY,KAAqC;QAAjD,YACE,kBAAM,KAAK,CAAC,SAKb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,IAAI,EAAE,KAAI,CAAC,KAAK,CAAC,IAAI;SACtB,CAAC;;IACJ,CAAC;IACD,GAAG;IACI,sDAAkB,GAAzB,UACE,SAAyC,EACzC,SAAyC;QAEzC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAEM,0CAAM,GAAb;QACE,MAAM,CAAC,CACL,iCAIE,IAAI,CAAC,KAAK,CAAC,SAAS;YACnB,oBAAC,mCAAU,IACX,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC/B,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EACtC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EACjC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,IAE7B,IAAI,CAAC,KAAK,CAAC,IAAI,CACL,CAER,CACP,CAAC;IACJ,CAAC;IACH,gCAAC;AAAD,CAxCA,AAwCC,CAxCsD,KAAK,CAAC,SAAS,GAwCrE","file":"propertyFields/message/PropertyFieldMessageHost.js","sourcesContent":["import * as React from \"react\";\nimport { TextField, MessageBar, MessageBarType } from \"office-ui-fabric-react\";\n//import styles from './Component.module.scss';\n\nimport {\n  IPropertyFieldMessageHostProps,\n  IPropertyFieldMessageHostState\n} from \"./IPropertyFieldMessageHost\";\n\n\nexport default class PropertyFieldPasswordHost extends React.Component<\n  IPropertyFieldMessageHostProps,\n  IPropertyFieldMessageHostState\n> {\n  constructor(props: IPropertyFieldMessageHostProps) {\n    super(props);\n\n    this.state = {\n      text: this.props.text\n    };\n  }\n  ///\n  public componentDidUpdate(\n    prevProps: IPropertyFieldMessageHostProps,\n    prevState: IPropertyFieldMessageHostState\n  ): void {\n    if (prevProps.text !== this.props.text) {\n      this.setState({ text: this.props.text });\n    }\n  }\n\n  public render(): React.ReactElement<IPropertyFieldMessageHostProps> {\n    return (\n      <div>\n\n\n      {\n        this.props.isVisible &&\n         <MessageBar\n         className={this.props.className}\n         messageBarType={this.props.messageType}\n         isMultiline={this.props.multiline}\n         truncated={this.props.truncate}\n       >\n         {this.state.text}\n       </MessageBar>\n      }\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../src"}