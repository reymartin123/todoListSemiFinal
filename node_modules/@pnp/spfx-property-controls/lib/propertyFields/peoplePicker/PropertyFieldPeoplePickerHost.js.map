{"version":3,"sources":["propertyFields/peoplePicker/PropertyFieldPeoplePickerHost.tsx"],"names":[],"mappings":"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","file":"propertyFields/peoplePicker/PropertyFieldPeoplePickerHost.js","sourcesContent":["import * as React from 'react';\nimport { IPropertyFieldGroupOrPerson, PrincipalType } from './IPropertyFieldPeoplePicker';\nimport { NormalPeoplePicker, IBasePickerSuggestionsProps } from 'office-ui-fabric-react/lib/Pickers';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { IPersonaProps, PersonaPresence, PersonaInitialsColor } from 'office-ui-fabric-react/lib/Persona';\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\nimport * as strings from 'PropertyControlStrings';\nimport { IPropertyFieldPeoplePickerHostProps, IPeoplePickerState } from './IPropertyFieldPeoplePickerHost';\nimport SPPeopleSearchService from '../../services/SPPeopleSearchService';\nimport FieldErrorMessage from '../errorMessage/FieldErrorMessage';\nimport * as telemetry from '../../common/telemetry';\n\n/**\n * Renders the controls for PropertyFieldPeoplePicker component\n */\nexport default class PropertyFieldPeoplePickerHost extends React.Component<IPropertyFieldPeoplePickerHostProps, IPeoplePickerState> {\n  private searchService: SPPeopleSearchService;\n  private intialPersonas: Array<IPersonaProps> = new Array<IPersonaProps>();\n  private resultsPeople: Array<IPropertyFieldGroupOrPerson> = new Array<IPropertyFieldGroupOrPerson>();\n  private resultsPersonas: Array<IPersonaProps> = new Array<IPersonaProps>();\n  private selectedPeople: Array<IPropertyFieldGroupOrPerson> = new Array<IPropertyFieldGroupOrPerson>();\n  private selectedPersonas: Array<IPersonaProps> = new Array<IPersonaProps>();\n  private async: Async;\n  private delayedValidate: (value: IPropertyFieldGroupOrPerson[]) => void;\n\n  /**\n   * Constructor method\n   */\n  constructor(props: IPropertyFieldPeoplePickerHostProps) {\n    super(props);\n\n    telemetry.track('PropertyFieldPeoplePicker', {\n      allowDuplicate: props.allowDuplicate,\n      principalType: props.principalType ? props.principalType.toString() : '',\n      disabled: props.disabled\n    });\n\n    this.searchService = new SPPeopleSearchService();\n    this.onSearchFieldChanged = this.onSearchFieldChanged.bind(this);\n    this.onItemChanged = this.onItemChanged.bind(this);\n\n    this.createInitialPersonas();\n\n    this.state = {\n      resultsPeople: this.resultsPeople,\n      resultsPersonas: this.resultsPersonas,\n      errorMessage: ''\n    };\n\n    this.async = new Async(this);\n    this.validate = this.validate.bind(this);\n    this.notifyAfterValidate = this.notifyAfterValidate.bind(this);\n    this.delayedValidate = this.async.debounce(this.validate, this.props.deferredValidationTime);\n  }\n\n  /**\n   * A search field change occured\n   */\n  private onSearchFieldChanged(searchText: string, currentSelected: IPersonaProps[]): Promise<IPersonaProps[]> | IPersonaProps[] {\n    if (searchText.length > 2) {\n      // Clear the suggestions list\n      this.setState({ resultsPeople: this.resultsPeople, resultsPersonas: this.resultsPersonas });\n      // Request the search service\n      const result = this.searchService.searchPeople(this.props.context, searchText, this.props.principalType, this.props.targetSiteUrl).then((response: IPropertyFieldGroupOrPerson[]) => {\n        this.resultsPeople = [];\n        this.resultsPersonas = [];\n        // If allowDuplicate == false, so remove duplicates from results\n        if (this.props.allowDuplicate === false) {\n          response = this.removeDuplicates(response);\n        }\n        response.forEach((element: IPropertyFieldGroupOrPerson, index: number) => {\n          // Fill the results Array\n          this.resultsPeople.push(element);\n          // Transform the response in IPersonaProps object\n          this.resultsPersonas.push(this.getPersonaFromPeople(element, index));\n        });\n        // Refresh the component's state\n        this.setState({ resultsPeople: this.resultsPeople, resultsPersonas: this.resultsPersonas });\n        return this.resultsPersonas;\n      });\n      return result;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Remove the duplicates if property allowDuplicate equals false\n   */\n  private removeDuplicates(responsePeople: IPropertyFieldGroupOrPerson[]): IPropertyFieldGroupOrPerson[] {\n    if (this.selectedPeople === null || this.selectedPeople.length === 0) {\n      return responsePeople;\n    }\n\n    const res: IPropertyFieldGroupOrPerson[] = [];\n    for (const element of responsePeople) {\n      let found: boolean = false;\n\n      for (let i: number = 0; i < this.selectedPeople.length; i++) {\n        const responseItem: IPropertyFieldGroupOrPerson = this.selectedPeople[i];\n        if (responseItem.login === element.login &&\n            responseItem.id === element.id) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found === false) {\n        res.push(element);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Creates the collection of initial personas from initial IPropertyFieldGroupOrPerson collection\n   */\n  private createInitialPersonas(): void {\n    if (this.props.initialData === null || typeof (this.props.initialData) !== typeof Array<IPropertyFieldGroupOrPerson>()) {\n      return;\n    }\n\n    this.props.initialData.forEach((element: IPropertyFieldGroupOrPerson, index: number) => {\n      const persona: IPersonaProps = this.getPersonaFromPeople(element, index);\n      this.intialPersonas.push(persona);\n      this.selectedPersonas.push(persona);\n      this.selectedPeople.push(element);\n    });\n  }\n\n  /**\n   * Generates a IPersonaProps object from a IPropertyFieldGroupOrPerson object\n   */\n  private getPersonaFromPeople(element: IPropertyFieldGroupOrPerson, index: number): IPersonaProps {\n    return {\n      primaryText: element.fullName,\n      secondaryText: element.jobTitle,\n      imageUrl: element.imageUrl,\n      imageInitials: element.initials,\n      presence: PersonaPresence.none,\n      initialsColor: this.getRandomInitialsColor(index)\n    };\n  }\n\n\n  /**\n   * Refreshes the web part properties\n   */\n  private refreshWebPartProperties(): void {\n    this.delayedValidate(this.selectedPeople);\n  }\n\n  /**\n  * Validates the new custom field value\n  */\n  private validate(value: IPropertyFieldGroupOrPerson[]): void {\n    if (this.props.onGetErrorMessage === null || this.props.onGetErrorMessage === undefined) {\n      this.notifyAfterValidate(this.props.initialData, value);\n      return;\n    }\n\n    const errResult: string | PromiseLike<string> = this.props.onGetErrorMessage(value || []);\n    if (errResult) {\n      if (typeof errResult === 'string') {\n        if (errResult === '') {\n          this.notifyAfterValidate(this.props.initialData, value);\n        }\n        this.setState({\n          errorMessage: errResult\n        });\n      } else {\n        errResult.then((errorMessage: string) => {\n          if (!errorMessage) {\n            this.notifyAfterValidate(this.props.initialData, value);\n          }\n          this.setState({\n            errorMessage: errorMessage\n          });\n        });\n      }\n    } else {\n      this.notifyAfterValidate(this.props.initialData, value);\n      this.setState({\n        errorMessage: null\n      });\n    }\n  }\n\n  /**\n   * Notifies the parent Web Part of a property value change\n   */\n  private notifyAfterValidate(oldValue: IPropertyFieldGroupOrPerson[], newValue: IPropertyFieldGroupOrPerson[]) {\n    if (this.props.onPropertyChange && newValue) {\n      this.props.properties[this.props.targetProperty] = newValue;\n      this.props.onPropertyChange(this.props.targetProperty, oldValue, newValue);\n      // Trigger the apply button\n      if (typeof this.props.onChange !== 'undefined' && this.props.onChange !== null) {\n        this.props.onChange(this.props.targetProperty, newValue);\n      }\n    }\n  }\n\n  /**\n   * Called when the component will unmount\n   */\n  public componentWillUnmount() {\n    this.async.dispose();\n  }\n\n  /**\n   * Find the index of the selected person\n   * @param selectedItem\n   */\n  private _findIndex(selectedItem: IPersonaProps): number {\n    for (let i = 0; i < this.resultsPersonas.length; i++) {\n      const crntPersona = this.resultsPersonas[i];\n      // Check if the imageUrl, primaryText, secondaryText are equal\n      if (crntPersona.imageUrl === selectedItem.imageUrl &&\n          crntPersona.primaryText === selectedItem.primaryText &&\n          crntPersona.secondaryText === selectedItem.secondaryText) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Event raises when the user changed people from the PeoplePicker component\n   */\n  private onItemChanged(selectedItems: IPersonaProps[]): void {\n    if (selectedItems.length > 0) {\n      if (selectedItems.length > this.selectedPersonas.length) {\n        const index: number = this._findIndex(selectedItems[selectedItems.length - 1]);\n        if (index > -1) {\n          const people: IPropertyFieldGroupOrPerson = this.resultsPeople[index];\n          this.selectedPeople.push(people);\n          this.selectedPersonas.push(this.resultsPersonas[index]);\n        }\n      } else {\n        this.selectedPersonas.forEach((person, index2) => {\n          const selectedItemIndex: number = selectedItems.indexOf(person);\n          if (selectedItemIndex === -1) {\n            this.selectedPersonas.splice(index2, 1);\n            this.selectedPeople.splice(index2, 1);\n          }\n        });\n      }\n    } else {\n      this.selectedPersonas.splice(0, this.selectedPersonas.length);\n      this.selectedPeople.splice(0, this.selectedPeople.length);\n    }\n\n    this.refreshWebPartProperties();\n  }\n\n  /**\n   * Generate a PersonaInitialsColor from the item position in the collection\n   */\n  private getRandomInitialsColor(index: number): PersonaInitialsColor {\n    const num: number = index % 13;\n    switch (num) {\n      case 0: return PersonaInitialsColor.blue;\n      case 1: return PersonaInitialsColor.darkBlue;\n      case 2: return PersonaInitialsColor.teal;\n      case 3: return PersonaInitialsColor.lightGreen;\n      case 4: return PersonaInitialsColor.green;\n      case 5: return PersonaInitialsColor.darkGreen;\n      case 6: return PersonaInitialsColor.lightPink;\n      case 7: return PersonaInitialsColor.pink;\n      case 8: return PersonaInitialsColor.magenta;\n      case 9: return PersonaInitialsColor.purple;\n      case 10: return PersonaInitialsColor.black;\n      case 11: return PersonaInitialsColor.orange;\n      case 12: return PersonaInitialsColor.red;\n      case 13: return PersonaInitialsColor.darkRed;\n      default: return PersonaInitialsColor.blue;\n    }\n  }\n\n  /**\n   * Renders the PeoplePicker controls with Office UI  Fabric\n   */\n  public render(): JSX.Element {\n    const suggestionProps: IBasePickerSuggestionsProps = {\n      suggestionsHeaderText: strings.PeoplePickerSuggestedContacts,\n      noResultsFoundText: strings.PeoplePickerNoResults,\n      loadingText: strings.PeoplePickerLoading,\n    };\n    // Check which text have to be shown\n    if (this.props.principalType && this.props.principalType.length > 0) {\n      let userType = this.props.principalType.indexOf(PrincipalType.Users) !== -1;\n      let groupType = this.props.principalType.indexOf(PrincipalType.SharePoint) !== -1 || this.props.principalType.indexOf(PrincipalType.Security) !== -1;\n\n      // Check if both user and group are present\n      if (userType && groupType) {\n        suggestionProps.suggestionsHeaderText = strings.PeoplePickerSuggestedCombined;\n      }\n\n      // If only group is active\n      if (!userType && groupType) {\n        suggestionProps.suggestionsHeaderText = strings.PeoplePickerSuggestedGroups;\n      }\n    }\n\n    // Renders content\n    return (\n      <div>\n        {this.props.label && <Label>{this.props.label}</Label>}\n        <NormalPeoplePicker\n          disabled={this.props.disabled}\n          pickerSuggestionsProps={suggestionProps}\n          onResolveSuggestions={this.onSearchFieldChanged}\n          onChange={this.onItemChanged}\n          defaultSelectedItems={this.intialPersonas}\n          itemLimit={this.props.multiSelect ? undefined : 1} />\n\n        <FieldErrorMessage errorMessage={this.state.errorMessage} />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../src"}