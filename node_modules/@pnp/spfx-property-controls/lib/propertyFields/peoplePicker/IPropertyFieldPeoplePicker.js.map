{"version":3,"sources":["propertyFields/peoplePicker/IPropertyFieldPeoplePicker.ts"],"names":[],"mappings":";;AAEA;;;;GAIG;AACH,IAAY,aAaX;AAbD,WAAY,aAAa;IACvB;;OAEG;IACH,mDAAS,CAAA;IACT;;OAEG;IACH,yDAAY,CAAA;IACZ;;OAEG;IACH,6DAAc,CAAA;AAChB,CAAC,EAbW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAaxB","file":"propertyFields/peoplePicker/IPropertyFieldPeoplePicker.js","sourcesContent":["import { IWebPartContext, IPropertyPaneCustomFieldProps } from '@microsoft/sp-webpart-base';\n\n/**\n * PrincipalType controls the type of entities that are returned in the results.\n * Choices are All - 15, Distribution List - 2 , Security Groups - 4, SharePoint Groups - 8, User - 1.\n * These values can be combined (example: 13 is security + SP groups + users)\n */\nexport enum PrincipalType {\n  /**\n   * Users\n   */\n  Users = 1,\n  /**\n   * Security Group\n   */\n  Security = 4,\n  /**\n   * SharePoint Group\n   */\n  SharePoint = 8\n}\n\n/**\n * Defines a People object for the PropertyFieldPeoplePicker\n */\nexport interface IPropertyFieldGroupOrPerson {\n\n  /**\n   * Group ID\n   */\n  id?: string;\n  /**\n   * Group Description\n   */\n  description?: string;\n  /**\n   * User's full name\n   */\n  fullName: string;\n  /**\n   * User's login\n   */\n  login: string;\n  /**\n   * User's email (optional)\n   */\n  email?: string;\n  /**\n   * User's job title (optional)\n   */\n  jobTitle?: string;\n  /**\n   * User's initials (optional)\n   */\n  initials?: string;\n  /**\n   * User's image url (optional)\n   */\n  imageUrl?: string;\n}\n\n/**\n * Public properties of the PropertyFieldPeoplePicker custom field\n */\nexport interface IPropertyFieldPeoplePickerProps {\n\n  /**\n   * Property field label\n   */\n  label: string;\n  /**\n   * Specify if the control needs to be disabled\n   */\n  disabled?: boolean;\n  /**\n   * Web Part context\n   */\n  context: IWebPartContext;\n  /**\n   * Intial data to load in the people picker (optional)\n   */\n  initialData?: IPropertyFieldGroupOrPerson[];\n  /**\n   * Defines if the People Picker allows to select duplicated users (optional)\n   */\n  allowDuplicate?: boolean;\n  /**\n   * Define which type of data you want to retrieve: User, SharePoint groups, Security groups\n   */\n  principalType?: PrincipalType[];\n  /**\n   * Define if you want to allow multi user / group selection. True by default.\n   */\n  multiSelect?: boolean;\n  /**\n   * Target a specific site to retrieve the users\n   */\n  targetSiteUrl?: string;\n  /**\n   * Defines a onPropertyChange function to raise when the selected value changed.\n   * Normally this function must be always defined with the 'this.onPropertyChange'\n   * method of the web part object.\n   */\n  onPropertyChange(propertyPath: string, oldValue: any, newValue: any): void;\n  /**\n   * Parent Web Part properties\n   */\n  properties: any;\n  /**\n   * An UNIQUE key indicates the identity of this control\n   */\n  key?: string;\n  /**\n   * The method is used to get the validation error message and determine whether the input value is valid or not.\n   *\n   *   When it returns string:\n   *   - If valid, it returns empty string.\n   *   - If invalid, it returns the error message string and the text field will\n   *     show a red border and show an error message below the text field.\n   *\n   *   When it returns Promise<string>:\n   *   - The resolved value is display as error message.\n   *   - The rejected, the value is thrown away.\n   *\n   */\n  onGetErrorMessage?: (value: IPropertyFieldGroupOrPerson[]) => string | Promise<string>;\n  /**\n   * Custom Field will start to validate after users stop typing for `deferredValidationTime` milliseconds.\n   * Default value is 200.\n   */\n  deferredValidationTime?: number;\n}\n\n/**\n * Private properties of the PropertyFieldPeoplePicker custom field.\n * We separate public & private properties to include onRender & onDispose method waited\n * by the PropertyFieldCustom, witout asking to the developer to add it when he's using\n * the PropertyFieldPeoplePicker.\n *\n */\nexport interface IPropertyFieldPeoplePickerPropsInternal extends IPropertyFieldPeoplePickerProps {\n\n  targetProperty: string;\n  onRender(elem: HTMLElement): void;\n  onDispose(elem: HTMLElement): void;\n}\n"],"sourceRoot":"../../../src"}