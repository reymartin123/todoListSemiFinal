"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ReactDom = require("react-dom");
var PropertyPaneMarkdownContentHost_1 = require("./PropertyPaneMarkdownContentHost");
var sp_webpart_base_1 = require("@microsoft/sp-webpart-base");
var PropertyPaneMarkdownContentBuilder = (function () {
    function PropertyPaneMarkdownContentBuilder(_properties) {
        this.type = sp_webpart_base_1.PropertyPaneFieldType.Custom;
        this.properties = {
            key: _properties.key,
            label: _properties.label,
            markdown: _properties.markdown,
            options: _properties.options,
            onRender: this.onRender.bind(this),
        };
    }
    PropertyPaneMarkdownContentBuilder.prototype.render = function () {
        if (!this.elem) {
            return;
        }
        this.onRender(this.elem);
    };
    PropertyPaneMarkdownContentBuilder.prototype.onRender = function (elem, ctx, changeCallback) {
        if (!this.elem) {
            this.elem = elem;
        }
        var element = React.createElement(PropertyPaneMarkdownContentHost_1.default, {
            description: this.properties.label,
            markdown: this.properties.markdown,
            markdownProps: this.properties.options
        });
        ReactDom.render(element, elem);
    };
    return PropertyPaneMarkdownContentBuilder;
}());
/**
 * Creates a property pane section that displays read-only markdown content.
 * Use this property pane control to display additional instructions, help
 * screens, etc.
 *
 * @param properties
 */
function PropertyPaneMarkdownContent(properties) {
    return new PropertyPaneMarkdownContentBuilder(properties);
}
exports.PropertyPaneMarkdownContent = PropertyPaneMarkdownContent;

//# sourceMappingURL=PropertyPaneMarkdownContent.js.map
