{"version":3,"sources":["propertyFields/collectionData/PropertyFieldCollectionData.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6BAA+B;AAC/B,oCAAsC;AACtC,8DAIoC;AAEpC,sBAAkI;AAElI;;GAEG;AACH;IAOE,4CAAmB,eAAuB,EAAE,WAAsD;QAL3F,SAAI,GAA0B,uCAAqB,CAAC,MAAM,CAAC;QAMhE,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;QAE9B,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAEO,mDAAM,GAAd,UAAe,IAAiB,EAAE,OAAa,EAAE,cAAoE;QACnH,IAAM,KAAK,GAAyE,IAAI,CAAC,UAAU,CAAC;QAEpG,IAAM,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC,kCAA+B,eAC9D,KAAK,IACR,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IACpC,CAAC;QAEH,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC;QAC1C,CAAC;IACH,CAAC;IAED;;OAEG;IACK,oDAAO,GAAf,UAAgB,IAAiB;QAC/B,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED;;;OAGG;IACK,sDAAS,GAAjB,UAAkB,KAAY;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IACH,yCAAC;AAAD,CA9CA,AA8CC,IAAA;AAED;;;;GAIG;AACH,qCAA4C,cAAsB,EAAE,UAA6C;IAC/G,MAAM,CAAC,IAAI,kCAAkC,CAAC,cAAc,eACvD,UAAU,IACb,QAAQ,EAAE,IAAI,EACd,SAAS,EAAE,IAAI,IACf,CAAC;AACL,CAAC;AAND,kEAMC","file":"propertyFields/collectionData/PropertyFieldCollectionData.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {\n  IPropertyPaneField,\n  PropertyPaneFieldType,\n  IPropertyPaneDropdownOption\n} from '@microsoft/sp-webpart-base';\n\nimport { PropertyFieldCollectionDataHost, IPropertyFieldCollectionDataPropsInternal, IPropertyFieldCollectionDataProps } from '.';\n\n/**\n * Property Field Collection Data Builder Class\n */\nclass PropertyFieldCollectionDataBuilder implements IPropertyPaneField<IPropertyFieldCollectionDataPropsInternal> {\n  public targetProperty: string;\n  public type: PropertyPaneFieldType = PropertyPaneFieldType.Custom;\n  public properties: IPropertyFieldCollectionDataPropsInternal;\n\n  private _onChangeCallback: (targetProperty?: string, newValue?: any) => void;\n\n  public constructor(_targetProperty: string, _properties: IPropertyFieldCollectionDataPropsInternal) {\n    this.targetProperty = _targetProperty;\n    this.properties = _properties;\n\n    this.properties.onRender = this.render.bind(this);\n    this.properties.onDispose = this.dispose.bind(this);\n  }\n\n  private render(elem: HTMLElement, context?: any, changeCallback?: (targetProperty?: string, newValue?: any[]) => void): void {\n    const props: IPropertyFieldCollectionDataProps = <IPropertyFieldCollectionDataProps>this.properties;\n\n    const element = React.createElement(PropertyFieldCollectionDataHost, {\n      ...props,\n      onChanged: this.onChanged.bind(this)\n    });\n\n    ReactDOM.render(element, elem);\n\n    if (changeCallback) {\n      this._onChangeCallback = changeCallback;\n    }\n  }\n\n  /**\n   * Dispose the property field\n   */\n  private dispose(elem: HTMLElement) {\n    ReactDOM.unmountComponentAtNode(elem);\n  }\n\n  /**\n   * On field change event handler\n   * @param value\n   */\n  private onChanged(value: any[]): void {\n    if (this._onChangeCallback) {\n      this._onChangeCallback(this.targetProperty, value);\n    }\n  }\n}\n\n/**\n * Property field\n * @param targetProperty\n * @param properties\n */\nexport function PropertyFieldCollectionData(targetProperty: string, properties: IPropertyFieldCollectionDataProps): IPropertyPaneField<IPropertyFieldCollectionDataPropsInternal> {\n  return new PropertyFieldCollectionDataBuilder(targetProperty, {\n    ...properties,\n    onRender: null,\n    onDispose: null\n  });\n}\n"],"sourceRoot":"../../../src"}