{"version":3,"sources":["propertyFields/filePicker/PropertyFieldFilePicker.ts"],"names":[],"mappings":"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","file":"propertyFields/filePicker/PropertyFieldFilePicker.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDom from 'react-dom';\n\nimport {\n  IPropertyPaneField,\n  PropertyPaneFieldType,\n  WebPartContext\n} from '@microsoft/sp-webpart-base';\n\nimport PropertyPaneFilePickerHost from './PropertyFieldFilePickerHost';\n\nimport { IFilePickerResult } from './filePickerControls';\nimport { IPropertyFieldFilePickerHostProps } from './IPropertyFieldFilePickerHost';\nimport { IPropertyFieldFilePickerPropsInternal, IPropertyFieldFilePickerProps } from './IPropertyFieldFilePicker';\n\n/**\n * Represents a PropertyFieldFilePicker object\n */\nclass PropertyFieldFilePickerBuilder implements IPropertyPaneField<IPropertyFieldFilePickerPropsInternal> {\n  \n  public type: PropertyPaneFieldType = PropertyPaneFieldType.Custom;\n  public targetProperty: string;\n  public properties: IPropertyFieldFilePickerPropsInternal;\n \n\n  private itemsCountQueryLimit: number;\n\n  private hideWebSearchTab: boolean;\n  private hideRecentTab: boolean;\n  private hideSiteFilesTab: boolean;\n  private hideLocalUploadTab: boolean;\n  private hideLinkUploadTab: boolean;\n  private hideOrganisationalAssetTab: boolean;\n  private hideOneDriveTab: boolean;\n  \n  private customProperties: any;\n  private key: string;\n  private disabled: boolean = false;\n  private required: boolean = false;\n  private storeLastActiveTab: boolean = true;\n  private context: WebPartContext;\n  private label?: string;\n  private buttonLabel?: string;\n  private buttonIcon?: string;\n  private onSave: (filePickerResult: IFilePickerResult) => void;\n  private onChanged?: (filePickerResult: IFilePickerResult) => void;\n  private buttonClassName?: string;\n  private panelClassName?: string;\n  private accepts?: string[];\n  private filePickerResult: IFilePickerResult;\n  private bingAPIKey: string;\n\n  private _onChangeCallback: (targetProperty?: string, newValue?: any) => void;\n  \n  public constructor(_targetProperty: string, _properties: IPropertyFieldFilePickerPropsInternal) {\n\n    this.targetProperty = _targetProperty;\n    this.properties = _properties;\n    this.properties.onDispose = this.dispose;\n    this.properties.onRender = this.render;\n\n    this.label = _properties.label;\n    this.buttonLabel = _properties.buttonLabel;\n    this.context = _properties.context;\n    this.buttonIcon = _properties.buttonIcon;\n    this.buttonClassName = _properties.buttonClassName;\n    this.panelClassName = _properties.panelClassName;\n    this.accepts = _properties.accepts;\n    this.filePickerResult = _properties.filePickerResult;\n    this.required = _properties.required;\n    this.bingAPIKey = _properties.bingAPIKey;\n\n\n    this.onSave = _properties.onSave;\n    this.onChanged = _properties.onChanged;\n\n    this.itemsCountQueryLimit = _properties.itemsCountQueryLimit !== undefined ? _properties.itemsCountQueryLimit : 100;\n\n    this.hideWebSearchTab = _properties.hideWebSearchTab !== undefined ? _properties.hideWebSearchTab : true;\n    this.hideRecentTab = _properties.hideRecentTab !== undefined ? _properties.hideRecentTab : false;\n    this.hideSiteFilesTab = _properties.hideSiteFilesTab !== undefined ? _properties.hideSiteFilesTab : false;\n    this.hideLocalUploadTab = _properties.hideLocalUploadTab !== undefined ? _properties.hideLocalUploadTab : false;\n    this.hideLinkUploadTab = _properties.hideLinkUploadTab !== undefined ? _properties.hideLinkUploadTab : false;\n    this.hideOrganisationalAssetTab = _properties.hideOrganisationalAssetTab !== undefined ? _properties.hideOrganisationalAssetTab : false;\n    this.hideOneDriveTab = _properties.hideOneDriveTab !== undefined ? _properties.hideOneDriveTab : false;\n    this.storeLastActiveTab = _properties.storeLastActiveTab !== undefined ? _properties.storeLastActiveTab : true;\n    this.onPropertyChange = _properties.onPropertyChange;\n    this.customProperties = _properties.properties;\n    this.key = _properties.key;\n    \n    this.context = _properties.context;\n\n    if (_properties.disabled === true) {\n      this.disabled = _properties.disabled;\n    }\n\n  }\n  \n  private render = (elem: HTMLElement, ctx?: any, changeCallback?: (targetProperty?: string, newValue?: any) => void): void => {\n\n    const element: React.ReactElement<IPropertyFieldFilePickerHostProps> = React.createElement(PropertyPaneFilePickerHost, {\n\n      label: this.label,\n      buttonLabel: this.buttonLabel,\n      context: this.context,\n      buttonIcon: this.buttonIcon,\n      buttonClassName: this.buttonClassName,\n      panelClassName: this.panelClassName,\n      required: this.required,\n      bingAPIKey: this.bingAPIKey,\n\n      onSave: this.onSave,\n      onChanged: this.onChanged,\n      itemsCountQueryLimit: this.itemsCountQueryLimit,\n      accepts: this.accepts,\n      filePickerResult: this.filePickerResult,\n\n      hideWebSearchTab: this.hideWebSearchTab,\n      hideRecentTab: this.hideRecentTab,\n      hideSiteFilesTab: this.hideSiteFilesTab,\n      hideLocalUploadTab: this.hideLocalUploadTab,\n      hideLinkUploadTab: this.hideLinkUploadTab,\n      hideOrganisationalAssetTab: this.hideOrganisationalAssetTab,\n      hideOneDriveTab: this.hideOneDriveTab,\n      storeLastActiveTab: this.storeLastActiveTab,\n\n      targetProperty: this.targetProperty,\n\n      properties: this.customProperties,\n      key: this.key,\n      disabled: this.disabled,\n\n      onDispose: this.dispose,\n      onRender: this.render,\n      onChange: changeCallback,\n      onPropertyChange: this.onPropertyChange\n    });\n    \n    ReactDom.render(element, elem);\n    \n  }\n  \n  private dispose(elem: HTMLElement): void {    \n  }\n  \n  public onPropertyChange(propertyPath: string, oldValue: any, newValue: any): void {    \n  }  \n\n}\n\n/**\n * Helper method to create a File Picker component on the PropertyPane.\n * @param targetProperty - Target property the File Picker component is associated to.\n * @param properties - Strongly typed File Picker component properties.\n */\nexport function PropertyFieldFilePicker(targetProperty: string, properties: IPropertyFieldFilePickerProps): IPropertyPaneField<IPropertyFieldFilePickerPropsInternal> {\n  \n  return new PropertyFieldFilePickerBuilder(targetProperty, {\n    ...properties,\n    targetProperty: targetProperty,\n    onRender: null,\n    onDispose: null,    \n  });\n}\n"],"sourceRoot":"../../../src"}