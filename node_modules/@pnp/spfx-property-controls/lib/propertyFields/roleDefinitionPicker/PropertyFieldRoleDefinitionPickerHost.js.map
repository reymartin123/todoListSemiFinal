{"version":3,"sources":["propertyFields/roleDefinitionPicker/PropertyFieldRoleDefinitionPickerHost.tsx"],"names":[],"mappings":"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","file":"propertyFields/roleDefinitionPicker/PropertyFieldRoleDefinitionPickerHost.js","sourcesContent":["import * as React from 'react';\nimport { Dropdown, IDropdownOption } from \"office-ui-fabric-react/lib/Dropdown\";\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { IPropertyFieldRoleDefinitionPickerHostProps, IPropertyFieldRoleDefinitionPickerHostState } from './IPropertyFieldRoleDefinitionPickerHost';\nimport { SPRoleDefinitionPickerService } from '../../services/SPRoleDefinitionPickerService';\nimport FieldErrorMessage from '../errorMessage/FieldErrorMessage';\nimport { IRoleDefinitionInformation } from '.';\nimport { IRoleDefinitionInformationCollection } from './IRoleDefinitionInformationCollection';\nimport * as telemetry from '../../common/telemetry';\n\n/**\n * Renders the controls for PropertyFieldRoleDefinitionPicker component\n */\nexport default class PropertyFieldRoleDefinitionPickerHost extends React.Component<IPropertyFieldRoleDefinitionPickerHostProps, IPropertyFieldRoleDefinitionPickerHostState> {\n\n  private options: IDropdownOption[] = [];\n  private selectedOptions: any[] = [];\n  private async: Async;\n  private resultsRoleDefinition: Array<IRoleDefinitionInformation> = new Array<IRoleDefinitionInformation>();\n\n  /**\n   * Constructor method\n   */\n  constructor(props: IPropertyFieldRoleDefinitionPickerHostProps) {\n    super(props);\n\n    telemetry.track('PropertyFieldRoleDefinitionPicker', {\n      disabled: props.disabled\n    });\n\n    this.state = {\n      results: this.options,\n      errorMessage: '',\n      loading: false\n    };\n\n    this.async = new Async(this);\n\n    this.onChanged = this.onChanged.bind(this);\n\n  }\n\n  public componentDidMount(): void {\n    // Start retrieving the list role definitions\n    this.loadRoleDefinitions();\n  }\n\n  public componentDidUpdate(prevProps: IPropertyFieldRoleDefinitionPickerHostProps, _prevState: IPropertyFieldRoleDefinitionPickerHostState): void {\n    if (this.props.webAbsoluteUrl !== prevProps.webAbsoluteUrl) {\n      this.loadRoleDefinitions();\n    }\n  }\n\n  /**\n   * Loads the role definitions from a SharePoint web\n   */\n  private loadRoleDefinitions(): void {\n\n    this.options = [];\n    this.selectedOptions = [];\n\n    const roleDefinitionService: SPRoleDefinitionPickerService = new SPRoleDefinitionPickerService(this.props, this.props.context);\n    const roleDefinitionsToExclude: string[] = this.props.roleDefinitionsToExclude ? this.props.roleDefinitionsToExclude : [];\n    let selectedRoleDefinitions: string[] = this.props.selectedRoleDefinition ? this.props.selectedRoleDefinition : [];\n\n    if (this.props.roleDefinitions && this.props.roleDefinitions.length > 0) {\n      this.props.roleDefinitions.forEach(i => {\n        if (selectedRoleDefinitions.indexOf(i.Name) === -1) {\n          selectedRoleDefinitions.push(i.Name);\n        }\n      });\n    }\n\n    roleDefinitionService.getRoleDefinitions().then((response: IRoleDefinitionInformationCollection) => {\n\n      // Start mapping the roleDefinitions that are selected\n      response.value.forEach((roleDefinition: IRoleDefinitionInformation) => {\n\n        if (roleDefinitionsToExclude.indexOf(roleDefinition.Name) === -1) {\n          this.options.push({\n            key: roleDefinition.Id,\n            text: roleDefinition.Name,\n            selected: selectedRoleDefinitions.indexOf(roleDefinition.Name) >= 0 ? true : false\n          });\n          this.resultsRoleDefinition.push(roleDefinition);\n        }\n      });\n\n      this.selectedOptions = this.options.filter(o => o.selected === true);\n      let selectedRoleDefinitionInformation: IRoleDefinitionInformation[] = [];\n      this.resultsRoleDefinition.forEach(value => {\n        this.selectedOptions.forEach(i => {\n          if (value.Id === i.key) {\n            selectedRoleDefinitionInformation.push(value);\n          }\n        });\n      });\n\n      if(this.props.multiSelect === true){\n        this.props.properties[this.props.targetProperty] = selectedRoleDefinitionInformation;\n      }\n      else{\n        this.props.properties[this.props.targetProperty] = selectedRoleDefinitionInformation[0];\n      }\n      \n\n      // Update the current component state\n      this.setState({\n        results: this.options,        \n        roleDefinitionInformationResult: this.resultsRoleDefinition\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: JSON.stringify(error),\n        loading: false\n      });\n    });\n  }\n\n  /**\n   * Raises when a role definition has been selected\n   */\n  private onChanged(option: IDropdownOption, _index?: number): void {\n\n    let selectedRoleDefinitionInformation: IRoleDefinitionInformation[] = [];\n\n    if(this.props.multiSelect){\n      if (option && option.selected) {\n        this.selectedOptions.push({\n          key: option.key,\n          text: option.text,\n          selected: option.selected\n        });\n      } else {\n        this.selectedOptions = this.selectedOptions.filter(o => o.key !== option.key);\n      }\n  \n      this.state.roleDefinitionInformationResult.forEach(value => {\n        this.selectedOptions.forEach(i => {\n          if (value.Id === i.key) {\n            selectedRoleDefinitionInformation.push(value);\n          }\n        });\n      });\n    }\n    else{\n      this.selectedOptions.push({\n        key: option.key,\n        text: option.text\n      });\n\n      this.selectedOptions = this.selectedOptions.filter(o => o.key === option.key);\n      \n      selectedRoleDefinitionInformation = this.state.roleDefinitionInformationResult.filter(i => i.Id === this.selectedOptions[0].key);\n\n    }\n\n\n    this.props.onPropertyChange(this.props.targetProperty, this.props.roleDefinitions, selectedRoleDefinitionInformation);\n\n    if (typeof this.props.onChange !== 'undefined' && this.props.onChange !== null) {\n      this.props.onChange(this.props.targetProperty, selectedRoleDefinitionInformation);\n    }\n\n    this.setState({\n      results: this.options,      \n    });\n\n  }\n\n  /**\n   * Called when the component will unmount\n   */\n  public componentWillUnmount() {\n    if (typeof this.async !== 'undefined') {\n      this.async.dispose();\n    }\n  }\n\n  /**\n   * Renders the SPRoleDefinitionPicker controls with Office UI Fabric\n   */\n  public render(): JSX.Element {\n    // Renders content\n    let multiSelectAllowed = true;\n    if(this.props.multiSelect !== undefined){\n      multiSelectAllowed = this.props.multiSelect;\n    }\n    return (\n      <div>\n        {this.props.label && <Label>{this.props.label}</Label>}\n        {multiSelectAllowed &&\n          <Dropdown options={this.state.results}\n            onChanged={this.onChanged}\n            multiSelect={true}\n            selectedKeys={this.selectedOptions.map(item => item.key) || []}\n            key={this.props.key}\n            disabled={this.props.disabled || false} />\n        }\n        {!multiSelectAllowed &&\n          <Dropdown options={this.state.results}\n            onChanged={this.onChanged}\n            multiSelect={false}\n            selectedKey={this.selectedOptions.map(item => item.key) || []}\n            key={this.props.key}\n            disabled={this.props.disabled || false} />\n        }\n        <FieldErrorMessage errorMessage={this.state.errorMessage} />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../src"}