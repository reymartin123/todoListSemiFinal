{"version":3,"sources":["propertyFields/listPicker/PropertyFieldListMultiPickerHost.tsx"],"names":[],"mappings":"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","file":"propertyFields/listPicker/PropertyFieldListMultiPickerHost.js","sourcesContent":["import * as React from 'react';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { IChoiceGroupOption } from 'office-ui-fabric-react/lib/ChoiceGroup';\nimport { Spinner, SpinnerType } from 'office-ui-fabric-react/lib/Spinner';\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\nimport { IPropertyFieldListMultiPickerHostProps, IPropertyFieldListMultiPickerHostState } from './IPropertyFieldListMultiPickerHost';\nimport { ISPLists, ISPList } from './IPropertyFieldListPickerHost';\nimport SPListPickerService from '../../services/SPListPickerService';\nimport FieldErrorMessage from '../errorMessage/FieldErrorMessage';\nimport * as telemetry from '../../common/telemetry';\n\n/**\n* Renders the controls for PropertyFieldSPListMultiplePicker component\n*/\nexport default class PropertyFieldListMultiPickerHost extends React.Component<IPropertyFieldListMultiPickerHostProps, IPropertyFieldListMultiPickerHostState> {\n  private options: IChoiceGroupOption[] = [];\n  private loaded: boolean = false;\n  private async: Async;\n  private delayedValidate: (value: string[]) => void;\n\n  /**\n  * Constructor\n  */\n  constructor(props: IPropertyFieldListMultiPickerHostProps) {\n    super(props);\n\n    telemetry.track('PropertyFieldListMultiPicker', {\n      disabled: props.disabled\n    });\n\n    this.onChanged = this.onChanged.bind(this);\n    this.onSelectAllChanged = this.onSelectAllChanged.bind(this);\n    this.state = {\n      results: this.options,\n      selectedKeys: [],\n      loaded: this.loaded,\n      errorMessage: ''\n    };\n\n    this.async = new Async(this);\n    this.validate = this.validate.bind(this);\n    this.notifyAfterValidate = this.notifyAfterValidate.bind(this);\n    this.delayedValidate = this.async.debounce(this.validate, this.props.deferredValidationTime);\n  }\n\n  public componentDidMount() {\n    this.loadLists();\n  }\n\n  public componentDidUpdate(prevProps: IPropertyFieldListMultiPickerHostProps, prevState: IPropertyFieldListMultiPickerHostState): void {\n    if (this.props.baseTemplate !== prevProps.baseTemplate ||\n        this.props.webAbsoluteUrl !== prevProps.webAbsoluteUrl) {\n      this.loadLists();\n    }\n  }\n\n  /**\n  * Loads the list from SharePoint current web site, or target site if specified by webRelativeUrl\n  */\n  private loadLists(): void {\n    // Builds the SharePoint List service\n    const listService: SPListPickerService = new SPListPickerService(this.props, this.props.context);\n    const listsToExclude: string[] = this.props.listsToExclude || [];\n\n    this.options = [];\n    // Gets the libs\n    listService.getLibs().then((response: ISPLists) => {\n      response.value.forEach((list: ISPList) => {\n        let isSelected: boolean = false;\n        let indexInExisting: number = -1;\n        // Defines if the current list must be selected by default\n        if (this.props.selectedLists) {\n          indexInExisting = this.props.selectedLists.indexOf(list.Id);\n        }\n\n        if (indexInExisting > -1) {\n          isSelected = true;\n          this.state.selectedKeys.push(list.Id);\n        }\n\n        // Add the option to the list if not inside the 'listsToExclude' array\n        if (listsToExclude.indexOf(list.Title) === -1 && listsToExclude.indexOf(list.Id) === -1) {\n          this.options.push({\n            key: list.Id,\n            text: list.Title,\n            checked: isSelected\n          });\n        }\n      });\n      this.loaded = true;\n      this.setState({\n        results: this.options,\n        selectedKeys: this.state.selectedKeys,\n        loaded: true\n      });\n    });\n  }\n\n  /**\n  * Raises when a list has been selected\n  */\n  private onChanged(element: React.FormEvent<HTMLElement>, isChecked: boolean): void {\n    if (element) {\n      const value: string = (element.currentTarget as any).value;\n      let selectedKeys = this.state.selectedKeys;\n      // Check if the element is selected\n      if (isChecked === false) {\n        // Remove the unselected item\n        selectedKeys = selectedKeys.filter(s => s !== value);\n      } else {\n        // Add the selected item and filter out the doubles\n        selectedKeys.push(value);\n        selectedKeys = selectedKeys.filter((item, pos, self) => {\n          return self.indexOf(item) === pos;\n        });\n      }\n      // Update the state and validate\n      this.setState({\n        selectedKeys: selectedKeys\n      });\n      this.delayedValidate(selectedKeys);\n    }\n  }\n\n  /**\n   * Raises when the select all checkbox is changed\n   */\n  private onSelectAllChanged(element: React.FormEvent<HTMLElement>, isChecked: boolean): void {\n    if (element) {\n      let selectedKeys = new Array<string>();\n      if (isChecked === true) {\n        this.options.forEach((value: IChoiceGroupOption) => {\n          selectedKeys.push(value.key);\n        });\n      }\n      this.setState({\n        selectedKeys: selectedKeys\n      });\n      this.delayedValidate(selectedKeys);\n    }\n  }\n\n  /**\n  * Validates the new custom field value\n  */\n  private validate(value: string[]): void {\n    if (this.props.onGetErrorMessage === null || typeof this.props.onGetErrorMessage === 'undefined') {\n      this.notifyAfterValidate(this.props.selectedLists, value);\n      return;\n    }\n\n    const errResult: string | PromiseLike<string> = this.props.onGetErrorMessage(value || []);\n    if (typeof errResult !== 'undefined') {\n      if (typeof errResult === 'string') {\n        if (errResult === '') {\n          this.notifyAfterValidate(this.props.selectedLists, value);\n        }\n        this.setState({\n          errorMessage: errResult\n        });\n      } else {\n        errResult.then((errorMessage: string) => {\n          if (typeof errorMessage === 'undefined' || errorMessage === '') {\n            this.notifyAfterValidate(this.props.selectedLists, value);\n          }\n          this.setState({\n            errorMessage: errorMessage\n          });\n        });\n      }\n    } else {\n      this.notifyAfterValidate(this.props.selectedLists, value);\n    }\n  }\n\n  /**\n  * Notifies the parent Web Part of a property value change\n  */\n  private notifyAfterValidate(oldValue: string[], newValue: string[]) {\n    if (this.props.onPropertyChange && newValue !== null) {\n      this.props.properties[this.props.targetProperty] = newValue;\n      this.props.onPropertyChange(this.props.targetProperty, oldValue, newValue);\n      // Trigger the apply button\n      if (typeof this.props.onChange !== 'undefined' && this.props.onChange !== null) {\n        this.props.onChange(this.props.targetProperty, newValue);\n      }\n    }\n  }\n\n  /**\n  * Called when the component will unmount\n  */\n  public componentWillUnmount() {\n    this.async.dispose();\n  }\n\n  /**\n  * Renders the SPListMultiplePicker controls with Office UI  Fabric\n  */\n  public render(): JSX.Element {\n    if (this.loaded === false) {\n      return (\n        <div>\n          <Label>{this.props.label}</Label>\n          <Spinner type={SpinnerType.normal} />\n        </div>\n      );\n    } else {\n      const styleOfLabel: any = {\n        color: this.props.disabled === true ? '#A6A6A6' : 'auto'\n      };\n\n      // Renders content\n      return (\n        <div>\n          {\n            (this.props.showSelectAll === false || this.props.selectAllInList === true) &&\n            <Label>{this.props.label}</Label>\n          }\n          {\n            this.props.showSelectAll === true &&\n            <div style={{ marginBottom: '5px'}} className='ms-ChoiceField'>\n              <Checkbox\n                checked={this.state.selectedKeys.length === this.options.length}\n                label={this.props.selectAllInList === true ? this.props.selectAllInListLabel : this.props.label}\n                onChange={this.onSelectAllChanged}\n                styles={{\n                  checkbox: {\n                    backgroundColor: (this.state.selectedKeys.length > 0 ? '#f4f4f4' : 'inherit'),\n                    visibility: (this.props.selectAllInList === false ? 'hidden' : 'visible')\n                  },\n                  checkboxHovered: {\n                    visibility: 'visible'\n                  },\n                  checkboxChecked: {\n                    visibility: 'visible'\n                  }\n                }}\n              />\n            </div>\n          }\n          {\n            this.options.map((item: IChoiceGroupOption, index: number) => {\n              const uniqueKey = this.props.targetProperty + '-' + item.key;\n              return (\n                <div style={{ marginBottom: '5px' }} className='ms-ChoiceField' key={uniqueKey}>\n                  <Checkbox\n                    checked={this.state.selectedKeys.indexOf(item.key.toString())>=0}\n                    disabled={this.props.disabled}\n                    label={item.text}\n                    onChange={this.onChanged}\n                    inputProps={{ value: item.key }}\n                  />\n                </div>\n              );\n            })\n          }\n\n          <FieldErrorMessage errorMessage={this.state.errorMessage} />\n        </div>\n      );\n    }\n  }\n}\n"],"sourceRoot":"../../../src"}