{"version":3,"sources":["propertyFields/checkboxWithCallout/PropertyFieldCheckboxWithCallout.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6BAA+B;AAC/B,oCAAsC;AACtC,8DAGoC;AAEpC,+FAA+E;AAI/E;;GAEG;AACH;IAQI,iDAAmB,eAAuB,EAAE,WAA2D;QANhG,SAAI,GAA0B,uCAAqB,CAAC,MAAM,CAAC;QAO9D,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;QAE9B,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzD,CAAC;IAEO,yDAAO,GAAf,UAAgB,IAAiB,EAAE,OAAa,EAAE,cAAkE;QAEhH,IAAM,KAAK,GAAmF,IAAI,CAAC,UAAU,CAAC;QAE9G,IAAM,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC,8CAAyB,eACtD,KAAK,IACR,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IACrC,CAAC;QAEH,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC;QAC5C,CAAC;IACL,CAAC;IAEO,0DAAQ,GAAhB,UAAiB,IAAiB;QAC9B,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;IAEO,2DAAS,GAAjB,UAAkB,CAA+B,EAAE,KAAc;QAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC;IACL,CAAC;IACL,8CAAC;AAAD,CAzCA,AAyCC,IAAA;AAED;;;;GAIG;AACH,0CAAiD,cAAsB,EAAE,UAAkD;IACvH,MAAM,CAAC,IAAI,uCAAuC,CAAC,cAAc,eAC1D,UAAU,IACb,QAAQ,EAAE,IAAI,EACd,SAAS,EAAE,IAAI,IACjB,CAAC;AACP,CAAC;AAND,4EAMC","file":"propertyFields/checkboxWithCallout/PropertyFieldCheckboxWithCallout.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {\n    IPropertyPaneField,\n    PropertyPaneFieldType\n} from '@microsoft/sp-webpart-base';\n\nimport PropertyFieldCheckboxHost from './PropertyFieldCheckboxWithCalloutHost';\n\nimport { IPropertyFieldCheckboxWithCalloutPropsInternal, IPropertyFieldCheckboxWithCalloutProps } from './IPropertyFieldCheckboxWithCallout';\n\n/**\n * Represents a PropertyFieldCheckboxWithCallout object\n */\nclass PropertyFieldCheckboxWithCalloutBuilder implements IPropertyPaneField<IPropertyFieldCheckboxWithCalloutPropsInternal> {\n    public targetProperty: string;\n    public type: PropertyPaneFieldType = PropertyPaneFieldType.Custom;\n    public properties: IPropertyFieldCheckboxWithCalloutPropsInternal;\n\n\n    private _onChangeCallback: (targetProperty?: string, newValue?: any) => void;\n\n    public constructor(_targetProperty: string, _properties: IPropertyFieldCheckboxWithCalloutPropsInternal) {\n        this.targetProperty = _targetProperty;\n        this.properties = _properties;\n\n        this.properties.onRender = this._render.bind(this);\n        this.properties.onDispose = this._dispose.bind(this);\n    }\n\n    private _render(elem: HTMLElement, context?: any, changeCallback?: (targetProperty?: string, newValue?: any) => void): void {\n\n        const props: IPropertyFieldCheckboxWithCalloutProps = <IPropertyFieldCheckboxWithCalloutProps>this.properties;\n\n        const element = React.createElement(PropertyFieldCheckboxHost, {\n            ...props,\n            onChange: this._onChange.bind(this)\n        });\n\n        ReactDOM.render(element, elem);\n\n        if (changeCallback) {\n            this._onChangeCallback = changeCallback;\n        }\n    }\n\n    private _dispose(elem: HTMLElement) {\n        ReactDOM.unmountComponentAtNode(elem);\n    }\n\n    private _onChange(e: React.FormEvent<HTMLElement>, value: boolean): void {\n        if (this._onChangeCallback) {\n            this._onChangeCallback(this.targetProperty, value);\n        }\n    }\n}\n\n/**\n * Helper method to create a Checkbox with Callout component on the PropertyPane.\n * @param targetProperty - Target property the Checkbox with Callout component is associated to.\n * @param properties - Strongly typed Checkbox with Callout component properties.\n */\nexport function PropertyFieldCheckboxWithCallout(targetProperty: string, properties: IPropertyFieldCheckboxWithCalloutProps): IPropertyPaneField<IPropertyFieldCheckboxWithCalloutPropsInternal> {\n    return new PropertyFieldCheckboxWithCalloutBuilder(targetProperty, {\n        ...properties,\n        onRender: null,\n        onDispose: null\n    });\n}\n"],"sourceRoot":"../../../src"}