{"version":3,"sources":["propertyFields/password/PropertyFieldPasswordHost.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,kEAAiE;AAQjE;IAAuD,6CAGtD;IACC,mCAAY,KAAsC;QAAlD,YACE,kBAAM,KAAK,CAAC,SAIb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,KAAK;SACxB,CAAC;;IACJ,CAAC;IACD,GAAG;IACI,sDAAkB,GAAzB,UAA0B,SAA0C,EAAE,SAA2C;QAC/G,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA,CAAC;YACxC,IAAI,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAC,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAEM,0CAAM,GAAb;QAAA,iBAgBC;QAfC,MAAM,CAAC,CACL;YACE,oBAAC,qBAAS,IACR,IAAI,EAAC,UAAU,EACf,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,EACjD,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,SAAS,EAAE,UACR,QAAe;oBAEhB,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;oBACnC,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACjC,CAAC,GACD,CACE,CACP,CAAC;IACJ,CAAC;IACH,gCAAC;AAAD,CAlCA,AAkCC,CAlCsD,KAAK,CAAC,SAAS,GAkCrE","file":"propertyFields/password/PropertyFieldPasswordHost.js","sourcesContent":["import * as React from \"react\";\nimport { TextField } from \"office-ui-fabric-react/lib/TextField\";\n//import styles from './Component.module.scss';\n\nimport {\n  IPropertyFieldPasswordHostProps,\n  IPropertyFieldPasswordHostState\n} from \"./IPropertyFieldPasswordHost\";\n\nexport default class PropertyFieldPasswordHost extends React.Component<\n  IPropertyFieldPasswordHostProps,\n  IPropertyFieldPasswordHostState\n> {\n  constructor(props: IPropertyFieldPasswordHostProps) {\n    super(props);\n    this.state = {\n      value: this.props.value\n    };\n  }\n  ///\n  public componentDidUpdate(prevProps: IPropertyFieldPasswordHostProps, prevState:  IPropertyFieldPasswordHostState): void {\n    if (prevProps.value !== this.props.value){\n      this.setState({value : this.props.value});\n    }\n  }\n\n  public render(): React.ReactElement<IPropertyFieldPasswordHostProps> {\n    return (\n      <div>\n        <TextField\n          type=\"password\"\n          label={this.props.label ? this.props.label : null}\n          value={this.state.value}\n          onChanged={(\n             newValue:string\n          ) => {\n            this.setState({ value: newValue });\n            this.props.onChanged(newValue);\n          }}\n        />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../src"}