{"version":3,"sources":["propertyFields/dateTimePicker/PropertyFieldDateTimePickerHost.tsx"],"names":[],"mappings":"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","file":"propertyFields/dateTimePicker/PropertyFieldDateTimePickerHost.js","sourcesContent":["import * as React from 'react';\nimport { IPropertyFieldDateTimePickerPropsInternal, TimeConvention, DateConvention, IDateTimeFieldValue } from './IPropertyFieldDateTimePicker';\nimport { DatePicker, IDatePickerStrings } from 'office-ui-fabric-react/lib/DatePicker';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\nimport * as strings from 'PropertyControlStrings';\nimport { IPropertyFieldDateTimePickerHostProps, IPropertyFieldDateTimePickerHostState, ITimeComponentProps, IHoursComponentProps } from './IPropertyFieldDateTimePickerHost';\nimport FieldErrorMessage from '../errorMessage/FieldErrorMessage';\nimport styles from './PropertyFieldDateTimePickerHost.module.scss';\nimport HoursComponent from './HoursComponent';\nimport MinutesComponent from './MinutesComponent';\nimport SecondsComponent from './SecondsComponent';\nimport * as telemetry from '../../common/telemetry';\n\n/**\n * Defines the labels of the DatePicker control (as months, days, etc.)\n */\nclass DatePickerStrings implements IDatePickerStrings {\n  /**\n   * An array of strings for the full names of months.\n   * The array is 0-based, so months[0] should be the full name of January.\n   */\n  public months: string[] = [\n    strings.DatePickerMonthLongJanuary, strings.DatePickerMonthLongFebruary,\n    strings.DatePickerMonthLongMarch, strings.DatePickerMonthLongApril,\n    strings.DatePickerMonthLongMay, strings.DatePickerMonthLongJune, strings.DatePickerMonthLongJuly,\n    strings.DatePickerMonthLongAugust, strings.DatePickerMonthLongSeptember, strings.DatePickerMonthLongOctober,\n    strings.DatePickerMonthLongNovember, strings.DatePickerMonthLongDecember\n  ];\n  /**\n   * An array of strings for the short names of months.\n   * The array is 0-based, so shortMonths[0] should be the short name of January.\n   */\n  public shortMonths: string[] = [\n    strings.DatePickerMonthShortJanuary, strings.DatePickerMonthShortFebruary,\n    strings.DatePickerMonthShortMarch, strings.DatePickerMonthShortApril,\n    strings.DatePickerMonthShortMay, strings.DatePickerMonthShortJune, strings.DatePickerMonthShortJuly,\n    strings.DatePickerMonthShortAugust, strings.DatePickerMonthShortSeptember, strings.DatePickerMonthShortOctober,\n    strings.DatePickerMonthShortNovember, strings.DatePickerMonthShortDecember\n  ];\n  /**\n   * An array of strings for the full names of days of the week.\n   * The array is 0-based, so days[0] should be the full name of Sunday.\n   */\n  public days: string[] = [\n    strings.DatePickerDayLongSunday, strings.DatePickerDayLongMonday, strings.DatePickerDayLongTuesday,\n    strings.DatePickerDayLongWednesday, strings.DatePickerDayLongThursday, strings.DatePickerDayLongFriday,\n    strings.DatePickerDayLongSaturday\n  ];\n  /**\n   * An array of strings for the initials of the days of the week.\n   * The array is 0-based, so days[0] should be the initial of Sunday.\n   */\n  public shortDays: string[] = [\n    strings.DatePickerDayShortSunday, strings.DatePickerDayShortMonday, strings.DatePickerDayShortTuesday,\n    strings.DatePickerDayShortWednesday, strings.DatePickerDayShortThursday, strings.DatePickerDayShortFriday,\n    strings.DatePickerDayShortSaturday\n  ];\n  /**\n   * String to render for button to direct the user to today's date.\n   */\n  public goToToday: string = strings.DatepickerGoToToday;\n  /**\n   * Error message to render for TextField if isRequired validation fails.\n   */\n  public isRequiredErrorMessage: string = '';\n  /**\n   * Error message to render for TextField if input date string parsing fails.\n   */\n  public invalidInputErrorMessage: string = '';\n}\n\n/**\n * Renders the controls for PropertyFieldDateTimePicker component\n */\nexport default class PropertyFieldDateTimePickerHost extends React.Component<IPropertyFieldDateTimePickerHostProps, IPropertyFieldDateTimePickerHostState> {\n\n  public static defaultProps = {\n    showLabels: true\n  };\n\n  private _latestValidateValue: string;\n  private async: Async;\n  private delayedValidate: (value: IDateTimeFieldValue) => void;\n\n  private _crntDate: Date;\n  private _crntHours: number;\n  private _crntMinutes: number;\n  private _crntSeconds: number;\n\n  /**\n   * Constructor\n   */\n  constructor(props: IPropertyFieldDateTimePickerHostProps) {\n    super(props);\n\n    telemetry.track('PropertyFieldDateTimePicker', {\n      dateConvention: props.dateConvention ? DateConvention[props.dateConvention] : '',\n      formatDate: !!props.formatDate,\n      timeConvention: props.timeConvention ? TimeConvention[props.timeConvention] : '',\n      disabled: props.disabled\n    });\n\n    // Bind the current object to the external called onSelectDate method\n    this._onSelectDate = this._onSelectDate.bind(this);\n    this._dropdownHoursChanged = this._dropdownHoursChanged.bind(this);\n    this._dropdownMinutesChanged = this._dropdownMinutesChanged.bind(this);\n    this._dropdownSecondsChanged = this._dropdownSecondsChanged.bind(this);\n\n    // Initiate the current date values\n    this._crntDate = this._getDateValue();\n\n    // Intiate the time values (only when date and time convention is active)\n    this._crntHours = this.props.dateConvention === DateConvention.DateTime && this._getDateValue() !== null ? this._getDateValue().getHours() : 0;\n    this._crntMinutes = this.props.dateConvention === DateConvention.DateTime && this._getDateValue() !== null ? this._getDateValue().getMinutes() : 0;\n    this._crntSeconds = this.props.dateConvention === DateConvention.DateTime && this._getDateValue() !== null ? this._getDateValue().getSeconds() : 0;\n\n    // Set the current state\n    this.state = {\n      day: this._crntDate,\n      hours: this._crntHours,\n      minutes: this._crntMinutes,\n      seconds: this._crntSeconds,\n      errorMessage: ''\n    };\n\n    this.async = new Async(this);\n    this.validate = this.validate.bind(this);\n    this.notifyAfterValidate = this.notifyAfterValidate.bind(this);\n    this.delayedValidate = this.async.debounce(this.validate, this.props.deferredValidationTime);\n  }\n\n  /**\n   * Function to retrieve the initial date\n   */\n  private _getDateValue() {\n    if (typeof this.props.initialDate !== 'undefined' && this.props.initialDate !== null) {\n      if (typeof this.props.initialDate.value !== 'undefined' && this.props.initialDate.value !== null) {\n        return new Date(this.props.initialDate.value.toString());\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Function called when the DatePicker Office UI Fabric component selected date changed\n   */\n  private _onSelectDate(date: Date): void {\n    if (date === null) {\n      return;\n    }\n    this._crntDate = date;\n    this._saveDate();\n  }\n\n  /**\n   * Function called when hours value have been changed\n   * @param element Hours dropdown value\n   */\n  private _dropdownHoursChanged(element?: IDropdownOption): void {\n    this._crntHours = parseInt(element.key.toString());\n    this._saveDate();\n  }\n\n  /**\n   * Function called when minutes value have been changed\n   * @param element Minutes dropdown value\n   */\n  private _dropdownMinutesChanged(element?: IDropdownOption): void {\n    this._crntMinutes = parseInt(element.key.toString());\n    this._saveDate();\n  }\n\n  /**\n   * Function called when seconds value have been changed\n   * @param element Seconds dropdown value\n   */\n  private _dropdownSecondsChanged(element?: IDropdownOption): void {\n    this._crntSeconds = parseInt(element.key.toString());\n    this._saveDate();\n  }\n\n  /**\n   * Save the new date\n   */\n  private _saveDate(): void {\n    // Check if the current date object exists\n    if (this._crntDate === null) {\n      return;\n    }\n\n    // Set the current date state for the component\n    this.setState({\n      day: this._crntDate,\n      hours: this._crntHours,\n      minutes: this._crntMinutes,\n      seconds: this._crntSeconds\n    });\n\n    // Create the final date object\n    const finalDate = new Date(this._crntDate.toISOString());\n    finalDate.setHours(this._crntHours);\n    finalDate.setMinutes(this._crntMinutes);\n    finalDate.setSeconds(this._crntSeconds);\n\n    if (finalDate !== null) {\n      let finalDateAsString: string = '';\n      if (this.props.formatDate) {\n        finalDateAsString = this.props.formatDate(finalDate);\n      } else {\n        finalDateAsString = finalDate.toString();\n      }\n      this.delayedValidate({\n        value: finalDate,\n        displayValue: finalDateAsString\n      });\n    }\n  }\n\n  /**\n   * Validates the new custom field value\n   */\n  private validate(dateVal: IDateTimeFieldValue): void {\n    if (typeof this.props.onGetErrorMessage === 'undefined' || this.props.onGetErrorMessage === null) {\n      this.notifyAfterValidate(this.props.initialDate, dateVal);\n      return;\n    }\n\n    if (this._latestValidateValue === dateVal.displayValue) {\n      return;\n    }\n    this._latestValidateValue = dateVal.displayValue;\n\n    const result: string | PromiseLike<string> = this.props.onGetErrorMessage(dateVal.displayValue || '');\n    if (typeof result !== 'undefined') {\n      if (typeof result === 'string') {\n        if (result === '') {\n          this.notifyAfterValidate(this.props.initialDate, dateVal);\n        }\n\n        this.setState({\n          errorMessage: result\n        });\n      } else {\n        result.then((errorMessage: string) => {\n          if (typeof errorMessage === 'undefined' || errorMessage === '') {\n            this.notifyAfterValidate(this.props.initialDate, dateVal);\n          }\n\n          this.setState({\n            errorMessage: errorMessage\n          });\n        });\n      }\n    }\n    else {\n      this.notifyAfterValidate(this.props.initialDate, dateVal);\n    }\n  }\n\n  /**\n   * Notifies the parent Web Part of a property value change\n   */\n  private notifyAfterValidate(oldValue: IDateTimeFieldValue, newValue: IDateTimeFieldValue) {\n    if (this.props.onPropertyChange && newValue !== null) {\n      this.props.properties[this.props.targetProperty] = newValue;\n      this.props.onPropertyChange(this.props.targetProperty, oldValue, newValue);\n      //  Trigger the apply button\n      if (typeof this.props.onChange !== 'undefined' && this.props.onChange !== null) {\n        this.props.onChange(this.props.targetProperty, newValue);\n      }\n    }\n  }\n\n  /**\n   * Called when the component will unmount\n   */\n  public componentWillUnmount() {\n    this.async.dispose();\n  }\n\n  /**\n   * Renders the control\n   */\n  public render(): JSX.Element {\n    // Defines the DatePicker control labels\n    const dateStrings: DatePickerStrings = new DatePickerStrings();\n\n    const {\n      showLabels,\n      disabled,\n      timeConvention,\n      dateConvention,\n      label\n    } = this.props;\n\n    // Check if the time element needs to be rendered\n    let timeElm: JSX.Element = <tr />;\n    if (dateConvention === DateConvention.DateTime) {\n      timeElm = (\n        <tr>\n          {showLabels && <td className={styles.labelCell}>\n            <Label className={styles.fieldLabel}>{strings.DateTimePickerTime}</Label>\n          </td>}\n          <td>\n            <table cellPadding='0' cellSpacing='0'>\n              <tbody>\n                <tr>\n                  <td>\n                    <HoursComponent\n                      disabled={disabled}\n                      timeConvention={timeConvention}\n                      value={this.state.hours}\n                      onChange={this._dropdownHoursChanged} />\n                  </td>\n                  <td className={styles.seperator}><Label>:</Label></td>\n                  <td>\n                    <MinutesComponent\n                      disabled={disabled}\n                      value={this.state.minutes}\n                      onChange={this._dropdownMinutesChanged} />\n                  </td>\n                  <td className={styles.seperator}><Label>:</Label></td>\n                  <td>\n                    <SecondsComponent\n                      disabled={disabled}\n                      value={this.state.seconds}\n                      onChange={this._dropdownSecondsChanged} />\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </td>\n        </tr>);\n    }\n\n    // Renders content\n    return (\n      <div className={styles.propertyFieldDateTimePicker}>\n        {label && <Label>{label}</Label>}\n        <table cellPadding='0' cellSpacing='0'>\n          <tbody>\n            <tr>\n              {showLabels && <td className={styles.labelCell}>\n                <Label className={styles.fieldLabel}>{strings.DateTimePickerDate}</Label>\n              </td>}\n              <td>\n                <DatePicker\n                  disabled={disabled}\n                  value={this.state.day}\n                  strings={dateStrings}\n                  isMonthPickerVisible={true}\n                  onSelectDate={this._onSelectDate}\n                  allowTextInput={false}\n                  firstDayOfWeek={this.props.firstDayOfWeek} />\n              </td>\n            </tr>\n            {!!timeElm &&\n              <tr>\n                <td className={styles.spacerRow} colSpan={showLabels ? 2 : 1}></td>\n              </tr>}\n            {timeElm}\n          </tbody>\n        </table>\n\n\n        <FieldErrorMessage errorMessage={this.state.errorMessage} />\n      </div >\n    );\n  }\n}\n"],"sourceRoot":"../../../src"}