{"version":3,"sources":["propertyFields/dateTimePicker/PropertyFieldDateTimePicker.ts"],"names":[],"mappings":"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","file":"propertyFields/dateTimePicker/PropertyFieldDateTimePicker.js","sourcesContent":["import { DayOfWeek } from 'office-ui-fabric-react/lib/utilities/dateValues/DateValues';\nimport * as React from 'react';\nimport * as ReactDom from 'react-dom';\nimport {\n  IPropertyPaneField,\n  PropertyPaneFieldType,\n  IPropertyPaneCustomFieldProps\n} from '@microsoft/sp-webpart-base';\nimport { IPropertyFieldDateTimePickerHostProps } from './IPropertyFieldDateTimePickerHost';\nimport PropertyFieldDateTimePickerHost from './PropertyFieldDateTimePickerHost';\nimport { IDateTimeFieldValue, IPropertyFieldDateTimePickerPropsInternal, TimeConvention, IPropertyFieldDateTimePickerProps, DateConvention } from './IPropertyFieldDateTimePicker';\n\n/**\n * Represents a PropertyFieldDateTimePicker object\n */\nclass PropertyFieldDateTimePickerBuilder implements IPropertyPaneField<IPropertyFieldDateTimePickerPropsInternal> {\n  // Properties defined by IPropertyPaneField\n  public type: PropertyPaneFieldType = PropertyPaneFieldType.Custom;\n  public targetProperty: string;\n  public properties: IPropertyFieldDateTimePickerPropsInternal;\n\n  // Custom properties\n  private label: string;\n  private disabled: boolean = false;\n  private initialDate: IDateTimeFieldValue;\n  private formatDate: (date: Date) => string;\n  private dateConvention: DateConvention;\n  private timeConvention: TimeConvention;\n  private firstDayOfWeek: DayOfWeek;\n  private onPropertyChange: (propertyPath: string, oldValue: any, newValue: any) => void;\n  private customProperties: any;\n  private key: string;\n  private onGetErrorMessage: (value: string) => string | Promise<string>;\n  private deferredValidationTime: number = 200;\n  private showLabels: boolean = true;\n\n  /**\n   * Constructor\n   */\n  public constructor(_targetProperty: string, _properties: IPropertyFieldDateTimePickerPropsInternal) {\n    this.render = this.render.bind(this);\n    this.targetProperty = _properties.targetProperty;\n    this.properties = _properties;\n    this.label = _properties.label;\n    this.initialDate = _properties.initialDate;\n    this.properties.onDispose = this.dispose;\n    this.properties.onRender = this.render;\n    this.onPropertyChange = _properties.onPropertyChange;\n    this.formatDate = _properties.formatDate;\n    this.customProperties = _properties.properties;\n    this.key = _properties.key;\n    this.onGetErrorMessage = _properties.onGetErrorMessage;\n\n    if (_properties.deferredValidationTime) {\n      this.deferredValidationTime = _properties.deferredValidationTime;\n    }\n\n    if (typeof _properties.disabled !== 'undefined') {\n      this.disabled = _properties.disabled;\n    }\n\n    if (typeof _properties.dateConvention !== 'undefined') {\n      this.dateConvention = _properties.dateConvention;\n    } else {\n      this.dateConvention = DateConvention.DateTime;\n    }\n\n    if (typeof _properties.timeConvention !== 'undefined') {\n      this.timeConvention = _properties.timeConvention;\n    } else {\n      this.timeConvention = TimeConvention.Hours24;\n    }\n\n    if (typeof _properties.firstDayOfWeek !== 'undefined') {\n      this.firstDayOfWeek = _properties.firstDayOfWeek;\n    } else {\n      this.firstDayOfWeek = DayOfWeek.Sunday;\n    }\n\n    this.showLabels = _properties.showLabels;\n  }\n\n  /**\n   * Renders the DatePicker field content\n   */\n  private render(elem: HTMLElement, ctx?: any, changeCallback?: (targetProperty?: string, newValue?: any) => void): void {\n    // Construct the JSX properties\n    const element: React.ReactElement<IPropertyFieldDateTimePickerHostProps> = React.createElement(PropertyFieldDateTimePickerHost, {\n      label: this.label,\n      disabled: this.disabled,\n      initialDate: this.initialDate,\n      targetProperty: this.targetProperty,\n      formatDate: this.formatDate,\n      dateConvention: this.dateConvention,\n      timeConvention: this.timeConvention,\n      firstDayOfWeek: this.firstDayOfWeek,\n      onDispose: this.dispose,\n      onRender: this.render,\n      onPropertyChange: this.onPropertyChange,\n      onChange: changeCallback,\n      properties: this.customProperties,\n      key: this.key,\n      onGetErrorMessage: this.onGetErrorMessage,\n      deferredValidationTime: this.deferredValidationTime,\n      showLabels: this.showLabels\n    });\n    // Calls the REACT content generator\n    ReactDom.render(element, elem);\n  }\n\n  /**\n   * Disposes the current object\n   */\n  private dispose(elem: HTMLElement): void {\n\n  }\n\n}\n\n/**\n * Helper method to create the customer field on the PropertyPane.\n * @param targetProperty - Target property the custom field is associated to.\n * @param properties - Strongly typed custom field properties.\n */\nexport function PropertyFieldDateTimePicker(targetProperty: string, properties: IPropertyFieldDateTimePickerProps): IPropertyPaneField<IPropertyFieldDateTimePickerPropsInternal> {\n  // Calls the PropertyFieldDateTimePicker builder object\n  // This object will simulate a PropertyFieldCustom to manage his rendering process\n  return new PropertyFieldDateTimePickerBuilder(targetProperty, {\n    ...properties,\n    targetProperty: targetProperty,\n    onDispose: null,\n    onRender: null\n  });\n}\n"],"sourceRoot":"../../../src"}