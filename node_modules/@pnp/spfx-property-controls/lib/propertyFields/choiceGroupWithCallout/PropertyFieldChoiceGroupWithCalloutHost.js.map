{"version":3,"sources":["propertyFields/choiceGroupWithCallout/PropertyFieldChoiceGroupWithCalloutHost.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,IAAM,IAAI,GAAQ,OAAO,CAAC,aAAa,CAAC,CAAC;AAEzC,4FAAuF;AAGvF,kDAAoD;AACpD,iFAAmG;AAEnG;IAAgE,sDAAoE;IAChI,4CAAY,KAAoD;QAAhE,YACI,kBAAM,KAAK,CAAC,SAKf;QAHG,SAAS,CAAC,KAAK,CAAC,gCAAgC,EAAE;YAC9C,QAAQ,EAAE,KAAK,CAAC,QAAQ;SAC3B,CAAC,CAAC;;IACP,CAAC;IAEM,mDAAM,GAAb;QACI,IAAM,gBAAgB,GAAsB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;QACxE,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM;YACnC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnB,IAAM,YAAY,GAAQ,MAAM,CAAC,SAAgB,CAAC;gBAClD,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY,CAAC,wBAAwB,CAAC;YACtE,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,CACH;YACI,oBAAC,6BAAmB,eAAK,IAAI,CAAC,KAAK,EAAI;YACvC,oBAAC,yBAAW,eAAK,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,EAAI,CAC9C,CACT,CAAC;IACN,CAAC;IACL,yCAAC;AAAD,CAxBA,AAwBC,CAxB+D,KAAK,CAAC,SAAS,GAwB9E","file":"propertyFields/choiceGroupWithCallout/PropertyFieldChoiceGroupWithCalloutHost.js","sourcesContent":["import * as React from 'react';\nconst omit: any = require('lodash.omit');\n\nimport PropertyFieldHeader from '../../common/propertyFieldHeader/PropertyFieldHeader';\n\nimport { IPropertyFieldChoiceGroupWithCalloutHostProps } from './IPropertyFieldChoiceGroupWithCalloutHost';\nimport * as telemetry from '../../common/telemetry';\nimport { ChoiceGroup, IChoiceGroupProps } from 'office-ui-fabric-react/lib/components/ChoiceGroup';\n\nexport default class PropertyFieldToggleWithCalloutHost extends React.Component<IPropertyFieldChoiceGroupWithCalloutHostProps, null> {\n    constructor(props: IPropertyFieldChoiceGroupWithCalloutHostProps) {\n        super(props);\n\n        telemetry.track('PropertyFieldToggleWithCallout', {\n            disabled: props.disabled\n        });\n    }\n\n    public render(): JSX.Element {\n        const choiceGroupProps: IChoiceGroupProps = omit(this.props, ['label']);\n        choiceGroupProps.options.forEach(option => {\n            if (option.iconProps) {\n                const iconPropsAny: any = option.iconProps as any;\n                option.iconProps.iconName = iconPropsAny.officeFabricIconFontName;\n            }\n        });\n        return (\n            <div>\n                <PropertyFieldHeader {...this.props} />\n                <ChoiceGroup {...omit(this.props, ['label'])} />\n            </div>\n        );\n    }\n}\n"],"sourceRoot":"../../../src"}