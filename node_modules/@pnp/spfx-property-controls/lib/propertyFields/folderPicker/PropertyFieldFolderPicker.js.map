{"version":3,"sources":["propertyFields/folderPicker/PropertyFieldFolderPicker.ts"],"names":[],"mappings":"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","file":"propertyFields/folderPicker/PropertyFieldFolderPicker.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDom from 'react-dom';\nimport {\n  IPropertyPaneField,\n  PropertyPaneFieldType,\n  WebPartContext\n} from '@microsoft/sp-webpart-base';\nimport PropertyFieldFolderPickerHost from './PropertyFieldFolderPickerHost';\nimport { IPropertyFieldFolderPickerHostProps } from './IPropertyFieldFolderPickerHost';\nimport { IPropertyFieldFolderPickerProps, IPropertyFieldFolderPickerPropsInternal } from './IPropertyFieldFolderPicker';\nimport { IFolder } from '../../services/IFolderExplorerService';\n\n/**\n * Represents a PropertyFieldFolderPickerPicker object\n */\nclass PropertyFieldFolderPickerBuilder implements IPropertyPaneField<IPropertyFieldFolderPickerPropsInternal> {\n\n  //Properties defined by IPropertyPaneField\n  public properties: IPropertyFieldFolderPickerPropsInternal;\n  public targetProperty: string;\n  public type: PropertyPaneFieldType = PropertyPaneFieldType.Custom;\n\n  //Custom properties label: string;\n  private context: WebPartContext;\n  private label: string;  \n    \n  private customProperties: any;  \n  private disabled: boolean = false;  \n  private key: string;\n  \n  private rootFolder: IFolder;\n  private defaultFolder: IFolder;\n\n  private required: boolean = false;\n  private canCreateFolders: boolean = false;\n  private selectedFolder: IFolder;\n  \n  private onPropertyChange: (propertyPath: string, oldValue: any, newValue: any) => void;\n  private onSelect: (folder: IFolder) => void;\n\n\n  /**\n   * Constructor method\n   */\n  public constructor(_targetProperty: string, _properties: IPropertyFieldFolderPickerPropsInternal) {\n\n    this.render = this.render.bind(this);\n    this.targetProperty = _targetProperty;\n    this.properties = _properties;\n    this.properties.onDispose = this.dispose;\n    this.properties.onRender = this.render;\n    this.label = _properties.label;\n    this.context = _properties.context;\n    \n    this.onPropertyChange = _properties.onPropertyChange;\n    this.customProperties = _properties.properties;\n    this.key = _properties.key;\n    this.rootFolder = _properties.rootFolder;\n    this.defaultFolder = _properties.defaultFolder;\n    this.onSelect = _properties.onSelect;\n\n    this.onPropertyChange = _properties.onPropertyChange;\n    this.customProperties = _properties.properties;\n\n    if(_properties.required === true){\n        this.required = _properties.required;\n    }\n    \n    if (_properties.disabled === true) {\n      this.disabled = _properties.disabled;\n    }    \n\n    if(_properties.canCreateFolders === true){\n        this.canCreateFolders = _properties.canCreateFolders;\n    }\n  }\n\n  /**\n   * Renders the FolderPickerPicker field content\n   */\n  private render(elem: HTMLElement, ctx?: any, changeCallback?: (targetProperty?: string, newValue?: any) => void): void {\n\n    const element: React.ReactElement<IPropertyFieldFolderPickerHostProps> = React.createElement(PropertyFieldFolderPickerHost, {\n        label: this.label,\n        targetProperty: this.targetProperty,\n        context: this.context,\n        rootFolder: this.rootFolder,\n        defaultFolder: this.defaultFolder,\n        onSelect: this.onSelect,\n        required: this.required,\n        canCreateFolders: this.canCreateFolders,  \n        onDispose: this.dispose,\n        onRender: this.render,\n        onChange: changeCallback,\n        onPropertyChange: this.onPropertyChange,\n        properties: this.customProperties,\n        key: this.key,\n        disabled: this.disabled,\n        selectedFolder: this.selectedFolder\n    });\n    \n      // Calls the REACT content generator\n      ReactDom.render(element, elem);\n  }\n\n  /**\n   * Disposes the current object\n   */\n  private dispose(_elem: HTMLElement): void {\n\n  }\n\n}\n\n/**\n * Helper method to create a Role Definitions Picker on the PropertyPane.\n * @param targetProperty - Target property the SharePoint role definition picker is associated to.\n * @param properties - Strongly typed Role Definition Picker properties.\n */\nexport function PropertyFieldFolderPicker(targetProperty: string, properties: IPropertyFieldFolderPickerProps): IPropertyPaneField<IPropertyFieldFolderPickerPropsInternal> {\n\n  //Create an internal properties object from the given properties\n  const newProperties: IPropertyFieldFolderPickerPropsInternal = {\n    label: properties.label,\n    targetProperty: targetProperty,\n    context: properties.context,        \n    onPropertyChange: properties.onPropertyChange,\n    properties: properties.properties,\n    onDispose: null,\n    onRender: null,\n    key: properties.key,    \n    disabled: properties.disabled,\n    onSelect: properties.onSelect,\n    rootFolder: properties.rootFolder,\n    canCreateFolders: properties.canCreateFolders,\n    defaultFolder: properties.defaultFolder,\n    required: properties.required,\n    selectedFolder: properties.selectedFolder    \n  };\n  //Calls the PropertyFieldFolderPickerPicker builder object\n  //This object will simulate a PropertyFieldCustom to manage his rendering process\n  return new PropertyFieldFolderPickerBuilder(targetProperty, newProperties);\n}\n"],"sourceRoot":"../../../src"}