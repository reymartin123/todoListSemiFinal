{"version":3,"sources":["propertyFields/folderPicker/PropertyFieldFolderPickerHost.tsx"],"names":[],"mappings":"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","file":"propertyFields/folderPicker/PropertyFieldFolderPickerHost.js","sourcesContent":["import * as React from 'react';\nimport styles from './FolderPicker.module.scss';\nimport { IPropertyFieldFolderPickerHostProps } from './IPropertyFieldFolderPickerHost';\nimport { IFolder } from '../../services/IFolderExplorerService';\nimport { IconButton, PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { getId } from 'office-ui-fabric-react/lib/Utilities';\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\nimport { FolderExplorer } from './controls/FolderExplorer';\nimport { IPropertyFieldFolderPickerState } from './IPropertyFieldFolderPickerState';\nimport * as telemetry from '../../common/telemetry';\n\nexport default class PropertyFieldFolderPickerHost extends React.Component<IPropertyFieldFolderPickerHostProps, IPropertyFieldFolderPickerState> {\n\n  private _folderLinkId = getId('folderLink');\n  private _selectedFolder: IFolder;\n\n  constructor(props: IPropertyFieldFolderPickerHostProps) {\n    super(props);\n\n    telemetry.track('PropertyFieldFolderPicker', {\n      disabled: props.disabled\n    });\n\n    this.state = {\n      showPanel: false,\n      selectedFolder: this.props.properties[this.props.targetProperty] || this.props.defaultFolder\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IPropertyFieldFolderPickerHostProps) {\n\n    if(this.props.properties[this.props.targetProperty] !== nextProps.properties[nextProps.targetProperty]){\n      this.setState({\n        selectedFolder: nextProps.properties[nextProps.targetProperty],\n      });\n    }\n  }\n\n  public render(): React.ReactElement<IPropertyFieldFolderPickerHostProps> {\n    return (\n      <div>\n        {this.props.label &&\n          <Label className={this.props.required ? styles.required : ''} htmlFor={this._folderLinkId}>{this.props.label}</Label>\n        }\n        <div className={styles.folderPicker}>\n          <div className={styles.selection}>\n            {!this.state.selectedFolder &&\n              <span className={styles.selectFolderLabel}>Select a folder</span>\n            }\n            {this.state.selectedFolder &&\n              <div className={styles.selectFolder}>\n                <Link className={styles.selectFolder} target='_blank' data-interception=\"off\" id={this._folderLinkId} href={this.state.selectedFolder.ServerRelativeUrl}>\n                  <span title={this.state.selectedFolder.Name}>{this.state.selectedFolder.Name}</span>\n                </Link>\n                <IconButton\n                  iconProps={{ iconName: 'Cancel' }}\n                  title=\"Delete selection\"\n                  ariaLabel=\"Delete selection\"\n                  onClick={this._resetSelection}\n                  disabled={this.props.disabled}\n                />\n              </div>\n            }\n          </div>\n          <div className={styles.selectButton}>\n            <IconButton\n              iconProps={{ iconName: 'FolderList' }}\n              title=\"Select folder\"\n              ariaLabel=\"Select folder\"\n              disabled={this.props.disabled}\n              onClick={this._showPanel}\n            />\n          </div>\n        </div>\n\n        <Panel\n          isOpen={this.state.showPanel}\n          type={PanelType.medium}\n          onDismiss={this._hidePanel}\n          headerText=\"Select folder\"\n          closeButtonAriaLabel=\"Close\"\n          onRenderFooterContent={this._onRenderFooterContent}\n        >\n          <div>\n            <FolderExplorer\n              context={this.props.context}\n              rootFolder={this.props.rootFolder}\n              defaultFolder={this.state.selectedFolder}\n              onSelect={this._onFolderSelect}\n              canCreateFolders={this.props.canCreateFolders}\n            />\n          </div>\n        </Panel>\n\n      </div>\n    );\n  }\n\n  private _showPanel = () => {\n    this.setState({ showPanel: true });\n  }\n\n  private _hidePanel = () => {\n    this.setState({ showPanel: false });\n  }\n\n  private _onRenderFooterContent = () => {\n    return (\n      <div className={styles.actions}>\n        <PrimaryButton iconProps={{ iconName: 'Save' }} onClick={this._onFolderSave}>\n          Save\n        </PrimaryButton>\n        <DefaultButton iconProps={{ iconName: 'Cancel' }} onClick={this._hidePanel}>\n          Cancel\n        </DefaultButton>\n      </div>\n    );\n  }\n\n  private _onFolderSelect = (folder: IFolder): void => {\n    this._selectedFolder = folder;\n  }\n\n  private _onFolderSave = (): void => {\n\n    this.props.onSelect(this._selectedFolder);\n\n    this.props.properties[this.props.targetProperty] = this._selectedFolder;\n    this.props.onPropertyChange(this.props.targetProperty, this.props.selectedFolder, this._selectedFolder);\n\n    if (typeof this.props.onChange !== 'undefined' && this.props.onChange !== null) {\n      this.props.onChange(this.props.targetProperty, this._selectedFolder);\n    }   \n\n    this.setState({\n      selectedFolder: this._selectedFolder,\n      showPanel: false,\n    });\n\n  }\n\n  private _resetSelection = (): void => {\n    this._selectedFolder = null;\n\n    this.setState({\n      selectedFolder: this._selectedFolder,\n    });\n\n    this.props.onSelect(this._selectedFolder);\n    this.props.properties[this.props.targetProperty] = this._selectedFolder;\n    this.props.onPropertyChange(this.props.targetProperty, this.props.selectedFolder, this._selectedFolder);\n\n    if (typeof this.props.onChange !== 'undefined' && this.props.onChange !== null) {\n      this.props.onChange(this.props.targetProperty, this._selectedFolder);\n    }\n  }\n}\n"],"sourceRoot":"../../../src"}