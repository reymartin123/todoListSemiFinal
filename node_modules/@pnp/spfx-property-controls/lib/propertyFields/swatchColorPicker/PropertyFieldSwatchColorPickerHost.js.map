{"version":3,"sources":["propertyFields/swatchColorPicker/PropertyFieldSwatchColorPickerHost.tsx"],"names":[],"mappings":"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","file":"propertyFields/swatchColorPicker/PropertyFieldSwatchColorPickerHost.js","sourcesContent":["import { IconButton } from 'office-ui-fabric-react/lib/Button';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { IColorCellProps, SwatchColorPicker } from 'office-ui-fabric-react/lib/SwatchColorPicker';\nimport * as strings from 'PropertyControlStrings';\nimport * as React from 'react';\n\nimport * as telemetry from '../../common/telemetry';\nimport { IPropertyFieldSwatchColorOption, PropertyFieldSwatchColorPickerStyle } from './IPropertyFieldSwatchColorPicker';\nimport {\n    IPropertyFieldSwatchColorPickerHostProps,\n    IPropertyFieldSwatchColorPickerHostState,\n} from './IPropertyFieldSwatchColorPickerHost';\nimport styles from './PropertyFieldSwatchColorPickerHost.module.scss';\n\nexport default class PropertyFieldSwatchColorPickerHost extends React.Component<IPropertyFieldSwatchColorPickerHostProps, IPropertyFieldSwatchColorPickerHostState> {\n\n\tconstructor(props: IPropertyFieldSwatchColorPickerHostProps, state: IPropertyFieldSwatchColorPickerHostState) {\n    super(props);\n\n\t\ttelemetry.track('PropertyFieldSwatchColorPicker', {\n\t\t  disabled: props.disabled\n\t\t});\n\n\t\tthis.state = {\n\t\t\terrorMessage: undefined,\n\t\t\tinlinePickerShowing: false\n\t\t};\n\n\t\tthis.onTogglePicker = this.onTogglePicker.bind(this);\n\t}\n\n\tpublic render(): JSX.Element {\n\t\treturn (\n\t\t\t<div className={styles.pfSwatchColorPicker}>\n\t\t\t\t{this.props.label && <Label>{this.props.label}</Label>}\n\t\t\t\t{this.props.style === PropertyFieldSwatchColorPickerStyle.Inline &&\n\t\t\t\t\t<table className={styles.cpInlineTable}>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td style={{width:\"100%\"}}>\n\t\t\t\t\t\t\t\t\t{this.state.inlinePickerShowing &&\n\t\t\t\t\t\t\t\t\t\t<div className={'ms-slideDownIn20 ' + styles.cpSwatchRow}>\n\t\t\t\t\t\t\t\t\t\t\t{this.renderSwatchColorPicker()}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{!this.state.inlinePickerShowing &&\n\t\t\t\t\t\t\t\t\t\t<div className=\"ms-slideUpIn20 ms-borderColor-neutralDark\"\n\t\t\t\t\t\t\t\t\t\t style={{backgroundColor:this.props.selectedColor, border:\"1px solid\"}}>&nbsp;</div>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className={styles.cpInlineRow}>\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\ttitle={strings.ColorPickerButtonTitle}\n\t\t\t\t\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\t\t\t\t\ticonProps={{ iconName: this.props.iconName, ariaLabel: strings.ColorPickerButtonTitle }}\n\t\t\t\t\t\t\t\t\t\tonClick={this.onTogglePicker} />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t}\n\t\t\t\t{this.props.style === PropertyFieldSwatchColorPickerStyle.Full && this.renderSwatchColorPicker()\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate renderSwatchColorPicker(): JSX.Element {\n\t\tlet colorCells: Array<IColorCellProps> = this.props.colors.map((value:IPropertyFieldSwatchColorOption, index:number) => {\n\t\t\treturn {\n\t\t\t\tid: index.toString(),\n\t\t\t\tlabel: value.label,\n\t\t\t\tcolor: value.color\n\t\t\t};\n\t\t});\n\n\t\treturn (\n\t\t\t<SwatchColorPicker\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\tcolumnCount={this.props.columnCount}\n\t\t\t\tselectedId={this.selectedColorId().toString()}\n\t\t\t\tcolorCells={colorCells}\n\t\t\t\tcellShape={this.props.showAsCircles ? 'circle' : 'square'}\n\t\t\t\tonColorChanged={this.props.onColorChanged}\n\t\t\t/>\n\t\t);\n\t}\n\n\tprivate onTogglePicker(): void {\n\t\tthis.setState({\n\t\t\tinlinePickerShowing: !this.state.inlinePickerShowing\n\t\t});\n\t}\n\n\tprivate selectedColorId(): number {\n\t\tfor(let i = 0; i < this.props.colors.length; i++) {\n\t\t\tif(this.props.colors[i].color === this.props.selectedColor) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n}\n"],"sourceRoot":"../../../src"}