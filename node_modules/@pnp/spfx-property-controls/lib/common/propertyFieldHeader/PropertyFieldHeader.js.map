{"version":3,"sources":["common/propertyFieldHeader/PropertyFieldHeader.tsx"],"names":[],"mappings":"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","file":"common/propertyFieldHeader/PropertyFieldHeader.js","sourcesContent":["import * as React from 'react';\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/components/Callout';\nimport { IPropertyFieldHeaderProps, IPropertyFieldHeaderState, CalloutTriggers } from './IPropertyFieldHeader';\nimport { getIconClassName } from 'office-ui-fabric-react/lib/Styling';\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\n\nimport styles from './PropertyFieldHeader.module.scss';\n\n/**\n * PropertyFieldHeader component.\n * Displays a label and a callout\n */\nexport default class PropertyFieldHeader extends React.Component<IPropertyFieldHeaderProps, IPropertyFieldHeaderState> {\n\n  private _infoIcon: HTMLElement;\n\n  public constructor(props: IPropertyFieldHeaderProps, state: IPropertyFieldHeaderState) {\n    super(props, state);\n    this._onCalloutDismiss = this._onCalloutDismiss.bind(this);\n    this.state = {\n      isCalloutVisible: false\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      disabled,\n      label,\n      calloutContent,\n      calloutTrigger,\n      calloutWidth,\n      gapSpace\n    } = this.props;\n\n    return (\n      <div className={css({\n        [styles.headerBar]: true,\n        [styles.isDisabled]: !!disabled\n      })}>\n        <div className={styles.header}>\n          {label}\n        </div>\n        <div className={styles.info}>\n          {calloutContent && (\n            <i className={getIconClassName('Info')} ref={(infoIcon) => { this._infoIcon = infoIcon; }}\n              onMouseOver={!disabled && calloutTrigger === CalloutTriggers.Hover ? this._onInfoIconMouseOver.bind(this) : null}\n              onMouseOut={!disabled && calloutTrigger === CalloutTriggers.Hover ? this._onInfoIconMouseOut.bind(this) : null}\n              onClick={!disabled && calloutTrigger === CalloutTriggers.Click ? this._onInfoIconClick.bind(this) : null}></i>\n          )}\n        </div>\n        {this.state.isCalloutVisible && (\n          <Callout\n            className={styles.headerCallout}\n            target={this._infoIcon}\n            isBeakVisible={true}\n            directionalHint={DirectionalHint.leftCenter}\n            directionalHintForRTL={DirectionalHint.rightCenter}\n            onDismiss={this._onCalloutDismiss}\n            gapSpace={gapSpace !== undefined ? gapSpace : 5}\n            calloutWidth={calloutWidth}>\n            {calloutContent}\n          </Callout>\n        )\n        }\n      </div>);\n  }\n\n\n  private _onCalloutDismiss() {\n    if (this.state.isCalloutVisible) {\n      this.setState({\n        isCalloutVisible: false\n      });\n    }\n  }\n\n  private _onInfoIconMouseOver(): void {\n    if (this.props.calloutTrigger !== CalloutTriggers.Hover) {\n      return;\n    }\n\n    if (!this.state.isCalloutVisible) {\n      this.setState({\n        isCalloutVisible: true\n      });\n    }\n  }\n\n  private _onInfoIconMouseOut(e: MouseEvent): void {\n    if (this.props.calloutTrigger !== CalloutTriggers.Hover) {\n      return;\n    }\n\n    if (e.relatedTarget) {\n\n      let relatedTarget: HTMLElement = (e.relatedTarget as HTMLElement);\n      if (relatedTarget && relatedTarget.closest('.ms-Callout-container')) {\n        return;\n      }\n    }\n\n    this.setState({\n      isCalloutVisible: false\n    });\n\n  }\n\n  private _onInfoIconClick(): void {\n    if (this.props.calloutTrigger !== CalloutTriggers.Click) {\n      return;\n    }\n\n    this.setState({\n      isCalloutVisible: !this.state.isCalloutVisible\n    });\n  }\n}\n"],"sourceRoot":"../../../src"}