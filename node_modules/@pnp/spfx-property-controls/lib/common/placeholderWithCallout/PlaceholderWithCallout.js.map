{"version":3,"sources":["common/placeholderWithCallout/PlaceholderWithCallout.tsx"],"names":[],"mappings":"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","file":"common/placeholderWithCallout/PlaceholderWithCallout.js","sourcesContent":["import * as React from 'react';\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/components/Callout';\nimport { IPlaceholderWithCalloutProps, IPlaceholderWithCalloutState } from './IPlaceholderWithCallout';\nimport { CalloutTriggers } from '../callout/Callout';\nimport { getIconClassName } from 'office-ui-fabric-react/lib/Styling';\n\nimport styles from './PlaceholderWithCallout.module.scss';\n\n/**\n * PlaceholderWithCallout component.\n * Displays a label and a callout\n */\nexport default class PlaceholderWithCallout extends React.Component<IPlaceholderWithCalloutProps, IPlaceholderWithCalloutState> {\n\n        private _infoIcon: HTMLElement;\n\n        public constructor(props: IPlaceholderWithCalloutProps, state: IPlaceholderWithCalloutState) {\n            super(props, state);\n            this._onCalloutDismiss = this._onCalloutDismiss.bind(this);\n            this.state = {\n                isCalloutVisible: false\n            };\n        }\n\n        public render(): JSX.Element {\n            return (\n                <div className={styles.placeholder}>\n                    <div className={styles.children}>\n                        {this.props.children}\n                    </div>\n                    <div className={styles.info}>\n                        <i className={getIconClassName('Info')} ref={(infoIcon) => { this._infoIcon = infoIcon; }}\n                            onMouseOver={this.props.calloutTrigger === CalloutTriggers.Hover ? this._onInfoIconMouseOver.bind(this) : null}\n                            onMouseOut={this.props.calloutTrigger === CalloutTriggers.Hover ? this._onInfoIconMouseOut.bind(this) : null}\n                            onClick={this.props.calloutTrigger === CalloutTriggers.Click ? this._onInfoIconClick.bind(this) : null}></i>\n                    </div>\n                    {this.state.isCalloutVisible && (\n                        <Callout\n                            className={styles.callout}\n                            target={this._infoIcon}\n                            isBeakVisible={true}\n                            directionalHint={DirectionalHint.leftCenter}\n                            directionalHintForRTL={DirectionalHint.rightCenter}\n                            onDismiss={this._onCalloutDismiss}\n                            gapSpace={this.props.gapSpace !== undefined ? this.props.gapSpace : 5}\n                            calloutWidth={this.props.calloutWidth}>\n                            {this.props.calloutContent}\n                        </Callout>\n                    )\n                    }\n                </div>);\n        }\n\n\n        private _onCalloutDismiss() {\n            if (this.state.isCalloutVisible) {\n                this.setState({\n                    isCalloutVisible: false\n                });\n            }\n        }\n\n        private _onInfoIconMouseOver(): void {\n            if (this.props.calloutTrigger !== CalloutTriggers.Hover) {\n                return;\n            }\n\n            if (!this.state.isCalloutVisible) {\n                this.setState({\n                    isCalloutVisible: true\n                });\n            }\n        }\n\n        private _onInfoIconMouseOut(e: MouseEvent): void {\n            if (this.props.calloutTrigger !== CalloutTriggers.Hover) {\n                return;\n            }\n\n            if (e.relatedTarget) {\n\n                let relatedTarget: HTMLElement = (e.relatedTarget as HTMLElement);\n                if (relatedTarget && relatedTarget.closest('.ms-Callout-container')) {\n                    return;\n                }\n            }\n\n            this.setState({\n                isCalloutVisible: false\n            });\n\n        }\n\n        private _onInfoIconClick(): void {\n            if (this.props.calloutTrigger !== CalloutTriggers.Click) {\n                return;\n            }\n\n            this.setState({\n                isCalloutVisible: !this.state.isCalloutVisible\n            });\n        }\n    }\n"],"sourceRoot":"../../../src"}